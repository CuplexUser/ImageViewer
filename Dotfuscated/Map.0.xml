<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2018-02-28T21:26:08</timestamp>
        <product version="5.32.1.6167" user="Martin Dahl" serial="234948-391">Dotfuscator Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>GeneralToolkitLib.dll</name>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;version&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;capacity&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`2</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_capacity</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_version</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;capacity&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;version&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>capacity</name>
                        <newname>b</newname>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>version</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;Index&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Value&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`2</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Index</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Index&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Value&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Index</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>Value</name>
                        <newname>b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;Chr&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Index&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType2`2</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Chr</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Index</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Chr&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Index&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Chr</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>Index</name>
                        <newname>b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;</name>
                <newname>al</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=90</signature>
                        <name>1BAE60DC28D365B5EF5493498787078BF53D20EF</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1024</signature>
                        <name>373B494F210C656134C5728D551D4C97B013EB33</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=240</signature>
                        <name>47E3B8265F3A9BD162A6677F3CD46F65C75C6AAF</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=3840</signature>
                        <name>62B792D603A9032470F66068EBDD4C2C27BC3584</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=64</signature>
                        <name>7D6C527F8D0ABA73C746077EA3EFC19074BCE633</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1120</signature>
                        <name>9AE2A86B62BFF132AFB9751C7A86FEA25C488207</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>B07AD78CBDEB37C052E4CAA18FC94C3C47ADB198</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>BE0B1E68B33C0D856DB2E57A58BE33459A247687</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>C5C8DBEEF93C53EAA450879AE7B256292BA4FC17</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>CCEF1A566A0B91796123C4B62C00BFCEA88BEFFA</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>D7813104E5CC1C1ED2C1B5252834D18D7DE112D4</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>E5C38399B441C52825A927808E5C7FD4A48F1951</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=160</signature>
                        <name>E84CF750337BB70114A76A64A62D163B2A79CE3C</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=2560</signature>
                        <name>EF2F325AA96D022E1C3C16A071416F33B884A0E6</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1024</name>
                <newname>al/f</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1120</name>
                <newname>al/g</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=160</name>
                <newname>al/d</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=240</name>
                <newname>al/e</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=2560</name>
                <newname>al/h</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</name>
                <newname>al/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=3840</name>
                <newname>al/i</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=64</name>
                <newname>al/b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=90</name>
                <newname>al/c</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;CalculateECCWords&gt;b__15_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(&lt;&gt;f__AnonymousType2`2&lt;char,int32&gt;)</signature>
                        <name>&lt;CreateAlphanumEncDict&gt;b__38_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;GetEncodingFromPlaintext&gt;b__19_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, unsigned int8)</signature>
                        <name>&lt;PlainTextToBinaryByte&gt;b__31_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>BinToDec</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>BinaryStringToBitBlockList</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo)</signature>
                        <name>CalculateECCWords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(int32)</signature>
                        <name>CalculateGeneratorPolynom</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(string)</signature>
                        <name>CalculateMessagePolynom</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>ConvertToAlphaNotation</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>ConvertToDecNotation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateAlignmentPatternTable</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateAlphanumEncDict</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateAntilogTable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateCapacityECCTable</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateCapacityTable</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode(string, GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel)</signature>
                        <name>CreateQrCode</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>DecToBin</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>DecToBin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetAlphaExpFromIntVal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode)</signature>
                        <name>GetCountIndicatorLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode(string)</signature>
                        <name>GetEncodingFromPlaintext</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel, int32)</signature>
                        <name>GetFormatString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetIntValFromAlphaExp</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(string, GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode, GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel)</signature>
                        <name>GetVersion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetVersionString</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidISO</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom, GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>MultiplyAlphaPolynoms</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom, GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem, int32)</signature>
                        <name>MultiplyGeneratorPolynomByLeadterm</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode)</signature>
                        <name>PlainTextToBinary</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>PlainTextToBinaryAlphanumeric</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>PlainTextToBinaryByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>PlainTextToBinaryNumeric</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ShrinkAlphaExp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom, GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>XORPolynoms</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[]</signature>
                        <name>alignmentPatternBaseValues</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern&gt;</signature>
                        <name>alignmentPatternTable</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;char,int32&gt;</signature>
                        <name>alphanumEncDict</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>alphanumEncTable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>capacityBaseValues</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>capacityECCBaseValues</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo&gt;</signature>
                        <name>capacityECCTable</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo&gt;</signature>
                        <name>capacityTable</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog&gt;</signature>
                        <name>galoisField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>remainderBits</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;(char, int32)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__22_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__22_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Linq.IGrouping`2&lt;int32,&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;&gt;)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__22_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__22_3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType2`2&lt;char,int32&gt;(char, int32)</signature>
                        <name>&lt;CreateAlphanumEncDict&gt;b__38_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;(GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern)</signature>
                        <name>&lt;CreateQrCode&gt;b__12_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetAlphaExpFromIntVal&gt;b__36_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;GetEncodingFromPlaintext&gt;b__19_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetIntValFromAlphaExp&gt;b__35_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(&lt;&gt;f__AnonymousType0`2&lt;int32,int32&gt;)</signature>
                        <name>&lt;GetVersion&gt;b__18_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__34_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__34_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__34_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__34_4</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern,System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;&gt;</signature>
                        <name>&lt;&gt;9__12_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType0`2&lt;int32,int32&gt;,int32&gt;</signature>
                        <name>&lt;&gt;9__18_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;char,bool&gt;</signature>
                        <name>&lt;&gt;9__19_0</name>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;char,int32,&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;&gt;</signature>
                        <name>&lt;&gt;9__22_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;,int32&gt;</signature>
                        <name>&lt;&gt;9__22_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__22_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__22_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem,int32&gt;</signature>
                        <name>&lt;&gt;9__34_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;,bool&gt;</signature>
                        <name>&lt;&gt;9__34_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;,int32&gt;</signature>
                        <name>&lt;&gt;9__34_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem,int32&gt;</signature>
                        <name>&lt;&gt;9__34_4</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog,int32&gt;</signature>
                        <name>&lt;&gt;9__35_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog,int32&gt;</signature>
                        <name>&lt;&gt;9__36_1</name>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;char,int32,&lt;&gt;f__AnonymousType2`2&lt;char,int32&gt;&gt;</signature>
                        <name>&lt;&gt;9__38_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass12_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo)</signature>
                        <name>&lt;CreateQrCode&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern)</signature>
                        <name>&lt;CreateQrCode&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>eccLevel</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>version</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass18_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo)</signature>
                        <name>&lt;GetVersion&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType0`2&lt;int32,int32&gt;(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo)</signature>
                        <name>&lt;GetVersion&gt;b__1</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails)</signature>
                        <name>&lt;GetVersion&gt;b__3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails)</signature>
                        <name>&lt;GetVersion&gt;b__4</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails,bool&gt;</signature>
                        <name>&lt;&gt;9__3</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails,bool&gt;</signature>
                        <name>&lt;&gt;9__4</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>eccLevel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>encMode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>plainText</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass34_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__3</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32, GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__6</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem,int32&gt;</signature>
                        <name>&lt;&gt;9__6</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;int32&gt;</signature>
                        <name>toGlue</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass34_1</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__5</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>exponent</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass35_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/o</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetIntValFromAlphaExp&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>exp</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass36_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/p</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetAlphaExpFromIntVal&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>intVal</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;</signature>
                        <name>PatternPositions</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ExponentAlpha</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IntegerValue</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/CodewordBlock</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BitString</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BlockNumber</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>CodeWords</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>ECCWords</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GroupNumber</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BlocksInGroup1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BlocksInGroup2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CodewordsInGroup1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CodewordsInGroup2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ECCPerBlock</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>ErrorCorrectionLevel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TotalDataCodewords</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>H</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>L</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>M</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>Q</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Alphanumeric</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Byte</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>ECI</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Kanji</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Numeric</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/f</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;)</signature>
                        <name>AddQuietZone</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Rectangle, System.Drawing.Rectangle)</signature>
                        <name>Intersects</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Rectangle, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;)</signature>
                        <name>IsBlocked</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>MaskCode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceAlignmentPatterns</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceDarkModule</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, string, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceDataWords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceFinderPatterns</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, string)</signature>
                        <name>PlaceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceTimingPatterns</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, string)</signature>
                        <name>PlaceVersion</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>ReserveSeperatorAreas</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>ReserveVersionAreas</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer/&lt;&gt;c__DisplayClass3_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/f/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.MethodInfo)</signature>
                        <name>&lt;MaskCode&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>patternName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer/&lt;&gt;c__DisplayClass4_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/f/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>&lt;PlaceDataWords&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;bool&gt;</signature>
                        <name>datawords</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer/MaskPattern</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/f/a</newname>
                <methodlist>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern1</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern2</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern4</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern5</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern6</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern7</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;)</signature>
                        <name>Score</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;()</signature>
                        <name>get_PolyItems</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;)</signature>
                        <name>set_PolyItems</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;</signature>
                        <name>&lt;PolyItems&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom/&lt;&gt;c__DisplayClass5_0</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/g/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;ToString&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>sb</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Coefficient</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Exponent</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(int32)</signature>
                        <name>GetGraphic</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ModulesPerSideFromVersion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;()</signature>
                        <name>get_ModuleMatrix</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;)</signature>
                        <name>set_ModuleMatrix</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;</signature>
                        <name>&lt;ModuleMatrix&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>version</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;()</signature>
                        <name>ModuleMatrix</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails&gt;</signature>
                        <name>Details</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode,int32&gt;</signature>
                        <name>CapacityDict</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>ErrorCorrectionLevel</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation</name>
                <methodlist>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;, GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;, GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>SetProgress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</signature>
                        <name>_codingOperation</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_originalSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>_progress</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</signature>
                        <name>Decoding</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</signature>
                        <name>Encoding</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.CoderPropID</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>Algorithm</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>BlockSize</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>DefaultProp</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>DictionarySize</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>EndMarker</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>LitContextBits</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>LitPosBits</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>MatchFinder</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>MatchFinderCycles</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>NumFastBytes</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>NumPasses</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>NumThreads</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>Order</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>PosStateBits</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>UsedMemorySize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.CRC</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>CalculateDigest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetDigest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>Update</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>UpdateByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int32, unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>VerifyDigest</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>Table</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_value</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.CommandForm</name>
                <methodlist>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>IDString</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>PostStringMode</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.CommandSubCharsSet</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Chars</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>EmptyAllowed</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.InBuffer</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>GetProcessedSize</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReadBlock</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>ReadByte</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>ReadByte</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_Buffer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_BufferSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_Limit</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_Pos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>m_ProcessedSize</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>m_Stream</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_StreamWasExhausted</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.OutBuffer</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushData</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushStream</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>GetProcessedSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>WriteByte</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_Buffer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_BufferSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_Pos</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>m_ProcessedSize</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>m_Stream</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.Parser</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsItSwitchChar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult(int32)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult[]</signature>
                        <name>_switches</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>kSwitchID1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>kSwitchID2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>kSwitchMinus</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.SwitchForm</name>
                <methodlist>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Compression.SevenZip.Common.SwitchType, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Compression.SevenZip.Common.SwitchType, bool, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Compression.SevenZip.Common.SwitchType, bool, int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>IDString</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxLen</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MinLen</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Multi</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PostCharSet</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>Type</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>PostCharIndex</name>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>PostStrings</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ThereIs</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>WithMinus</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>LimitedPostString</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>PostChar</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>PostMinus</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>Simple</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>UnLimitedPostString</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.BinTree</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>GetIndexByte</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, unsigned int32, unsigned int32)</signature>
                        <name>GetMatchLen</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32[])</signature>
                        <name>GetMatches</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetNumAvailableBytes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MovePos</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Normalize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32[], unsigned int32, unsigned int32)</signature>
                        <name>NormalizeLinks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetCutValue</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetType</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Skip</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>HASH_ARRAY</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cutValue</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cyclicBufferPos</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cyclicBufferSize</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_hash</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_hashMask</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_hashSizeSum</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_matchMaxLen</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_son</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kBT2HashSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kEmptyHashValue</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kFixHashSize</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kHash2Size</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kHash3Offset</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kHash3Size</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMaxValForNormalize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMinMatchCheck</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumHashDirectBytes</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kStartMaxLen</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.IInWindowStream</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>GetIndexByte</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, unsigned int32, unsigned int32)</signature>
                        <name>GetMatchLen</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetNumAvailableBytes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.IMatchFinder</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32[])</signature>
                        <name>GetMatches</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Skip</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.InWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>GetIndexByte</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, unsigned int32, unsigned int32)</signature>
                        <name>GetMatchLen</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetNumAvailableBytes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MoveBlock</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MovePos</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadBlock</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReduceOffsets</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_blockSize</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>_bufferBase</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_bufferOffset</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_keepSizeAfter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_keepSizeBefore</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_pointerToLastSafePosition</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_pos</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_posLimit</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>_stream</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_streamEndWasReached</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_streamPos</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.OutWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>CopyBlock</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Flush</name>
                    </method>
                    <method>
                        <signature>unsigned int8(unsigned int32)</signature>
                        <name>GetByte</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, bool)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>PutByte</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>Train</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TrainSize</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>_buffer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_pos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>_stream</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_streamPos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_windowSize</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetLenToPosState</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kAlignMask</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kAlignTableSize</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kDicLogSizeMin</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kEndPosModelIndex</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMatchMaxLen</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMatchMinLen</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumAlignBits</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumFullDistances</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumHighLenBits</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLenSymbols</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLenToPosStates</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumLenToPosStatesBits</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLitContextBitsMax</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLitPosStatesBitsEncodingMax</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumLowLenBits</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLowLenSymbols</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMidLenBits</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumMidLenSymbols</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumPosModels</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumPosSlotBits</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumPosStatesBitsEncodingMax</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumPosStatesBitsMax</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumPosStatesEncodingMax</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumPosStatesMax</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumRepDistances</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumStates</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kStartPosModelIndex</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State</name>
                <newname>ai/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsCharState</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateChar</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateMatch</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateRep</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateShortRep</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Index</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>Code</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>SetDecoderProperties</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetDictionarySize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>SetLiteralProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetPosBitsProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>Train</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_solid</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_DictionarySize</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_DictionarySizeCheck</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsMatchDecoders</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRep0LongDecoders</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepDecoders</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepG0Decoders</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepG1Decoders</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepG2Decoders</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LenDecoder</signature>
                        <name>m_LenDecoder</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder</signature>
                        <name>m_LiteralDecoder</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.OutWindow</signature>
                        <name>m_OutWindow</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder</signature>
                        <name>m_PosAlignDecoder</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_PosDecoders</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder[]</signature>
                        <name>m_PosSlotDecoder</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_PosStateMask</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder</signature>
                        <name>m_RangeDecoder</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LenDecoder</signature>
                        <name>m_RepLenDecoder</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LenDecoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int32)</signature>
                        <name>Decode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder</signature>
                        <name>m_Choice</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder</signature>
                        <name>m_Choice2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder</signature>
                        <name>m_HighCoder</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder[]</signature>
                        <name>m_LowCoder</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder[]</signature>
                        <name>m_MidCoder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_NumPosStates</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int32, unsigned int8)</signature>
                        <name>DecodeNormal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int32, unsigned int8, unsigned int8)</signature>
                        <name>DecodeWithMatchByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int8)</signature>
                        <name>GetState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder/Decoder2[]</signature>
                        <name>m_Coders</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPosBits</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPrevBits</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_PosMask</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder/Decoder2</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/b/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>DecodeNormal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int8)</signature>
                        <name>DecodeWithMatchByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_Decoders</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32&amp;, unsigned int32)</signature>
                        <name>Backward</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BaseInit</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>Code</name>
                    </method>
                    <method>
                        <signature>void(int64&amp;, int64&amp;, bool&amp;)</signature>
                        <name>CodeOneBlock</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Create</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FillAlignPrices</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FillDistancesPrices</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>FindMatchFinder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Flush</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32&amp;)</signature>
                        <name>GetOptimum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>GetPosLenPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPosSlot</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPosSlot2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State, unsigned int32)</signature>
                        <name>GetPureRepPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State, unsigned int32)</signature>
                        <name>GetRepLen1Price</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State, unsigned int32)</signature>
                        <name>GetRepPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>MovePos</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;, unsigned int32&amp;)</signature>
                        <name>ReadMatchDistances</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseMFStream</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseOutStream</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStreams</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.CoderPropID[], object[])</signature>
                        <name>SetCoderProperties</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetOutStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream)</signature>
                        <name>SetStreams</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetWriteEndMarkerMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>WriteCoderProperties</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>WriteEndMarker</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_additionalOffset</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_alignPriceCount</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_alignPrices</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_dictionarySize</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_dictionarySizePrev</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_distTableSize</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_distancesPrices</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_finished</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>_inStream</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isMatch</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRep</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRep0Long</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRepG0</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRepG1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRepG2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenPriceTableEncoder</signature>
                        <name>_lenEncoder</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder</signature>
                        <name>_literalEncoder</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_longestMatchLength</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_longestMatchWasFound</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_matchDistances</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.IMatchFinder</signature>
                        <name>_matchFinder</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</signature>
                        <name>_matchFinderType</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_matchPriceCount</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_needReleaseMFStream</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_numDistancePairs</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_numFastBytes</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_numFastBytesPrev</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_numLiteralContextBits</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_numLiteralPosStateBits</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/Optimal[]</signature>
                        <name>_optimum</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_optimumCurrentIndex</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_optimumEndIndex</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder</signature>
                        <name>_posAlignEncoder</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_posEncoders</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder[]</signature>
                        <name>_posSlotEncoder</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_posSlotPrices</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_posStateBits</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_posStateMask</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>_previousByte</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder</signature>
                        <name>_rangeEncoder</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_repDistances</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenPriceTableEncoder</signature>
                        <name>_repMatchLenEncoder</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State</signature>
                        <name>_state</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_writeEndMark</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>g_FastPos</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kDefaultDictionaryLogSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kIfinityPrice</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>kMatchFinderIDs</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumFastBytesDefault</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumOpts</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kPropSize</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>nowPos64</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>properties</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>repLens</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>reps</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>tempPrices</name>
                        <newname>ac</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/CodeProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>Finished</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ProcessedInSize</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ProcessedOutSize</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</signature>
                        <name>BT2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</signature>
                        <name>BT4</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenEncoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Init</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32[], unsigned int32)</signature>
                        <name>SetPrices</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder</signature>
                        <name>_choice</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder</signature>
                        <name>_choice2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder</signature>
                        <name>_highCoder</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder[]</signature>
                        <name>_lowCoder</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder[]</signature>
                        <name>_midCoder</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenPriceTableEncoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32)</signature>
                        <name>GetPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetTableSize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>UpdateTable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>UpdateTables</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_counters</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_prices</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_tableSize</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder/Encoder2(unsigned int32, unsigned int8)</signature>
                        <name>GetSubCoder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder/Encoder2[]</signature>
                        <name>m_Coders</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPosBits</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPrevBits</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_PosMask</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder/Encoder2</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/d/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int8)</signature>
                        <name>Encode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int8, unsigned int8)</signature>
                        <name>EncodeMatched</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(bool, unsigned int8, unsigned int8)</signature>
                        <name>GetPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>m_Encoders</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/Optimal</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsShortRep</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeAsChar</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeAsShortRep</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BackPrev</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BackPrev2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PosPrev</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PosPrev2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Prev1IsChar</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Prev2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Price</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State</signature>
                        <name>State</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>Decode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int32)</signature>
                        <name>UpdateModel</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Prob</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kBitModelTotal</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumBitModelTotalBits</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMoveBits</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPrice</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetPrice0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetPrice1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>UpdateModel</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Prob</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>ProbPrices</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kBitModelTotal</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumBitModelTotalBits</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumBitPriceShiftBits</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMoveBits</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMoveReducingBits</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>Decode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[], unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, int32)</signature>
                        <name>ReverseDecode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>ReverseDecode</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>Models</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NumBitLevels</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[], unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, int32, unsigned int32)</signature>
                        <name>ReverseEncode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32)</signature>
                        <name>ReverseEncode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[], unsigned int32, int32, unsigned int32)</signature>
                        <name>ReverseGetPrice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>ReverseGetPrice</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>Models</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NumBitLevels</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Decode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, int32)</signature>
                        <name>DecodeBit</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(int32)</signature>
                        <name>DecodeDirectBits</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetThreshold</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Normalize</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Normalize2</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Code</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Range</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>Stream</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kTopValue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, int32, unsigned int32)</signature>
                        <name>EncodeBit</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, int32)</signature>
                        <name>EncodeDirectBits</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushData</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushStream</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetProcessedSizeAdd</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShiftLow</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Low</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Range</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>StartPosition</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>Stream</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>_cache</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cacheSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kTopValue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.DataErrorException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ICodeProgress</name>
                <methodlist>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>SetProgress</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ICoder</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>Code</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ISetCoderProperties</name>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.CoderPropID[], object[])</signature>
                        <name>SetCoderProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ISetDecoderProperties</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>SetDecoderProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.IWriteCoderProperties</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>WriteCoderProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.InvalidParamException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.AssemblyHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Reflection.Assembly()</signature>
                        <name>GetAssembly</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNameOfThisAssembly</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.GlobalSettings</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>GetApplicationLogFilePath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetAssemblyPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetHashtableFilename</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUserDataDirectoryPath</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>Initialize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnitTestInitialize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Initialized</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>UserDbFileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isInitialized</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_logFileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_userDataPath</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Initialized</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>get_ConfigItems</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;()</signature>
                        <name>get_ConfigSections</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.ConfigHelper.IniConfigItemCollection)</signature>
                        <name>set_ConfigItems</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;)</signature>
                        <name>set_ConfigSections</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection</signature>
                        <name>&lt;ConfigItems&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;</signature>
                        <name>&lt;ConfigSections&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>ConfigItems</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;()</signature>
                        <name>ConfigSections</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigFileManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadConfigFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SaveConfigFile</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigFile()</signature>
                        <name>get_ConfigurationData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ConfigFileItemPattern</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ConfigFileSectionPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ConfigSectionNamePattern</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigFile</signature>
                        <name>_iniFileData</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigFile()</signature>
                        <name>ConfigurationData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigFileSection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>get_ConfigItems</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.ConfigHelper.IniConfigItemCollection)</signature>
                        <name>set_ConfigItems</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection</signature>
                        <name>&lt;ConfigItems&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>ConfigItems</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string(string)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Configuration.ApplicationBuildConfig</name>
                <methodlist>
                    <method>
                        <signature>string(bool)</signature>
                        <name>ApplicationLogFilePath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetAssemblyPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUserDataPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.Assembly)</signature>
                        <name>IsDebug</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.Assembly)</signature>
                        <name>IsRelease</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DebugMode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserDataPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_userDataPath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>DebugMode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserDataPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.Base32</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>FromBase32String</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ToBase32String</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Base32Alphabet</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>InByteSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>OutByteSize</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.Base32Encoding</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>CharToValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>ToBytes</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>char(unsigned int8)</signature>
                        <name>ValueToChar</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters</name>
                <methodlist>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteArrayToBase64</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteArrayToHexString</name>
                    </method>
                    <method>
                        <signature>string(System.IO.FileAttributes)</signature>
                        <name>FileAttributesToString</name>
                    </method>
                    <method>
                        <signature>string(int64, int32)</signature>
                        <name>FormatFileSizeToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GeneratePasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>GetByteArrayFromString</name>
                    </method>
                    <method>
                        <signature>string(string, bool)</signature>
                        <name>GetDirectoryNameFromPath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFileNameFromPath</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetRandomHexValue</name>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetSecondsFromDateTime</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetStringFromByteArray</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetVolumeLabelFromPath</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>HexStringToByteArray</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>StringToByteArray</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>&lt;HexStringToByteArray&gt;b__7_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;int32,bool&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/&lt;&gt;c__DisplayClass7_0</name>
                <newname>GeneralToolkitLib.Converters.GeneralConverters/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>&lt;HexStringToByteArray&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>hex</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string(int64)</signature>
                        <name>ConvertFileSizeToString</name>
                    </method>
                    <method>
                        <signature>string(int64, int32)</signature>
                        <name>ConvertFileSizeToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>FileSizeTypesStrings</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>Byte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>GigaByte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>KiloByte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>MegaByte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>PetaByte</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/OffsetRange</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>FileSizeStep</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Max</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/StaticLongFileSizes</name>
                <newname>GeneralToolkitLib.Converters.GeneralConverters/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>FileSizeTypesStrings</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.StringManipulation</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>Reverse</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ReverseBySeparator</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ReverseXor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.AVLTreeNode`1</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>void(!0)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_LeftChild</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Parent</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_RightChild</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_LeftChild</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Parent</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_RightChild</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.AVLTree`1</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;(!0)</signature>
                        <name>Find</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>Remove</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>Remove</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;, int32)</signature>
                        <name>balanceAt</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>getBalance</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Root</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>rotateLeft</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>rotateRight</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Root</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTreeNode`1</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void(!0)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ChildCount</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasLeftChild</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasRightChild</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInternal</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLeaf</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLeftChild</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRightChild</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_LeftChild</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Parent</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_RightChild</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;()</signature>
                        <name>get_Tree</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Value</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_LeftChild</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Parent</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_RightChild</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>set_Tree</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>set_Value</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>leftChild</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>parent</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>rightChild</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>value</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>int32(System.IComparable, System.IComparable)</signature>
                        <name>CompareElements</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(!0[])</signature>
                        <name>CopyTo</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(!0[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;(!0)</signature>
                        <name>Find</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(!0)</signature>
                        <name>GetDepth</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>GetDepth</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(!0)</signature>
                        <name>GetHeight</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHeight</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>GetHeight</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetInOrderEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetPostOrderEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetPreOrderEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>Remove</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Root</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;()</signature>
                        <name>get_TraversalOrder</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Root</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;)</signature>
                        <name>set_TraversalOrder</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Comparison`1&lt;System.IComparable&gt;</signature>
                        <name>comparer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>head</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>traversalMode</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/BinaryTreeInOrderEnumerator</name>
                <newname>z/b</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>visitNode</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;&gt;</signature>
                        <name>traverseQueue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/BinaryTreePostOrderEnumerator</name>
                <newname>z/c</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>visitNode</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;&gt;</signature>
                        <name>traverseQueue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/BinaryTreePreOrderEnumerator</name>
                <newname>z/d</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>visitNode</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;&gt;</signature>
                        <name>traverseQueue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode</name>
                <newname>z/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>InOrder</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>PostOrder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>PreOrder</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.OpenFileEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.OutcomeEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Successful</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Successful</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Successful&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.OutcomeEventArgs</signature>
                        <name>Failure</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.OutcomeEventArgs</signature>
                        <name>Success</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Successful</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.SaveFileEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.Sequence</name>
                <methodlist>
                    <method>
                        <signature>int32(object, object)</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object, object, object)</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object[])</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.UInt128</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Numerics.BigInteger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int64, unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>BitwiseAnd</name>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>LeftShift</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string, System.Globalization.NumberStyles)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string, System.Globalization.NumberStyles, System.IFormatProvider)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string, System.IFormatProvider)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>RightShift</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>System.Numerics.BigInteger()</signature>
                        <name>ToBigInteger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string, System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool(string, GeneralToolkitLib.DataTypes.UInt128&amp;)</signature>
                        <name>TryParse</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Globalization.NumberStyles, System.IFormatProvider, GeneralToolkitLib.DataTypes.UInt128&amp;)</signature>
                        <name>TryParse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_BitwiseAnd</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(System.Numerics.BigInteger)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>unsigned int64(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_GreaterThan</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_GreaterThanOrEqual</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(unsigned int64)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>System.Numerics.BigInteger(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>op_LeftShift</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_LessThan</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_LessThanOrEqual</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>op_RightShift</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Subtraction</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>MaxValue</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>MinValue</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>One</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SizeOf</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>Zero</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>_leastSignificant</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>_mostSignificant</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.CryptoProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.CryptoProgressHandler)</signature>
                        <name>Report</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>_storageManagerAsyncExProgres</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.CryptoProgressHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_EncodedBytes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalBytes</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_EncodedBytes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_TotalBytes</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;EncodedBytes&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;TotalBytes&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>EncodedBytes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalBytes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[]&amp;, string)</signature>
                        <name>DecodeString</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], string)</signature>
                        <name>DecryptData</name>
                    </method>
                    <method>
                        <signature>System.IO.MemoryStream(string, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>DecryptFileToMemoryStream</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;System.IO.MemoryStream&gt;(string, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>DecryptFileToMemoryStreamAsync</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[]&amp;, string, string)</signature>
                        <name>EncodeString</name>
                    </method>
                    <method>
                        <signature>bool(string, System.IO.MemoryStream, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>EncryptAndSaveFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(string, System.IO.MemoryStream, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>EncryptAndSaveFileAsync</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], string)</signature>
                        <name>EncryptData</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](object, string)</signature>
                        <name>EncryptObject</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetDerivedPassword</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_BUFFER_SIZE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>SALT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>SALT2</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;&gt;c__DisplayClass3_0</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;EncryptAndSaveFileAsync&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>ms</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;&gt;c__DisplayClass5_0</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IO.MemoryStream()</signature>
                        <name>&lt;DecryptFileToMemoryStreamAsync&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;DecryptFileToMemoryStreamAsync&gt;d__5</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.IO.MemoryStream&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.IO.MemoryStream&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;EncryptAndSaveFileAsync&gt;d__3</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>ms</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.DataConverters.ObjectSerializer</name>
                <methodlist>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel(unsigned int8[])</signature>
                        <name>DeserializeLicenceData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel(string)</signature>
                        <name>DeserializeLicenceDataFromString</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel(unsigned int8[])</signature>
                        <name>DeserializeRegistrationData</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel(string)</signature>
                        <name>DeserializeRegistrationDataFromString</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](object)</signature>
                        <name>SerializeDataContract</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>get_RegistrationData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RegistrationKey</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_ValidationHash</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>set_RegistrationData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RegistrationKey</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_ValidationHash</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</signature>
                        <name>&lt;RegistrationData&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RegistrationKey&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;ValidationHash&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>RegistrationData</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RegistrationKey</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>ValidationHash</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Company</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo()</signature>
                        <name>get_ComputerId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Salt</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ValidTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VersionName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Company</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.SysInfo)</signature>
                        <name>set_ComputerId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FirstName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Salt</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ValidTo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VersionName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Company&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo</signature>
                        <name>&lt;ComputerId&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FirstName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LastName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Salt&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ValidTo&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VersionName&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Company</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo()</signature>
                        <name>ComputerId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FirstName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Salt</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ValidTo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VersionName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.LicenceService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;LoadSystemInfo&gt;b__19_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadLicenceFromFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadSystemInfo</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateLicence</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnInitComplete</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Initialized</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService()</signature>
                        <name>get_Instance</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>get_LicenceData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RegistrationKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ValidLicence</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnInitComplete</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_FILE_SIZE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnInitComplete</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_initializing</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</signature>
                        <name>_licenceData</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.SerialNumberManager</signature>
                        <name>_serialNumberManager</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService/LicenceServiceState</signature>
                        <name>_serviceState</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Initialized</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService()</signature>
                        <name>Instance</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>LicenceData</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RegistrationKey</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ValidLicence</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnInitComplete</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.LicenceService/LicenceServiceState</name>
                <newname>GeneralToolkitLib.Encryption.Licence.LicenceService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo</signature>
                        <name>SystemInfo</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Valid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Validated</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.RegistrationDataManager</name>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.RegistrationDataManager(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SerializeToString</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>get_RegistrationData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</signature>
                        <name>_registrationData</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>RegistrationData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.SerialNumberManager</name>
                <methodlist>
                    <method>
                        <signature>void(System.Security.Cryptography.RSAParameters, GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ConvertToBase32SerialNumber</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>CreateRegistrationKey</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], System.Security.Cryptography.RSAParameters)</signature>
                        <name>HashAndSign</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], System.Security.Cryptography.RSAParameters)</signature>
                        <name>HashAndSignBytes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidateRegistrationData</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>VerifyRegistrationKey</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[], unsigned int8[], System.Security.Cryptography.RSAParameters)</signature>
                        <name>VerifySignedHash</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>get_LicenceData</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel)</signature>
                        <name>set_LicenceData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>KeyFormat</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VALIDATION_HASH_LENTH</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</signature>
                        <name>_app</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</signature>
                        <name>_licenceData</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.RSAParameters</signature>
                        <name>_rsaPubKey</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>LicenceData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</signature>
                        <name>SearchForDuplicates</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</signature>
                        <name>SecureMemo</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/PrivateKeys</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/a/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>GeneralToolkitLib</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SearchForDuplicates</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SecureMemoPrivateKey</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/PublicKeys</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/a/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>GeneralToolkitLib</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SearchForDuplicates</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SecureMemo</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/SaltData</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/a/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>GeneralToolkit</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/SearchForDuplicatesApplication</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/a/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>SEARCH_FOR_DUPLICATES</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Versions</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/SecureMemo</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/a/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>SECURE_MEMO_BASE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Versions</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.SysInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComputerId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SignedHash</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ComputerId</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SignedHash</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_computerId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_signedHash</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ComputerId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SignedHash</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.SysInfoManager</name>
                <methodlist>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo()</signature>
                        <name>GetComputerId</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSAKeySetIdentity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NickName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NickName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>RSA_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RSA_PrivateKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RSA_PublicKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_nickName</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>NickName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSALocalCryptoKeyManager</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>System.Security.Cryptography.RSAParameters()</signature>
                        <name>GetAssemblyRsaParameters</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.RSAKeySetIdentity()</signature>
                        <name>GetLocalKeySetIdentity</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, System.Security.Cryptography.RSAParameters)</signature>
                        <name>DecryptObjectUsingRSA</name>
                    </method>
                    <method>
                        <signature>string(string, System.Security.Cryptography.RSAParameters)</signature>
                        <name>EncryptObjectUsingRSA</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.RSAKeySetIdentity(GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize)</signature>
                        <name>GenerateRSAKeyPair</name>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.RSAParameters(GeneralToolkitLib.Encryption.RSAKeySetIdentity)</signature>
                        <name>ParseRSAKeyInfo</name>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.RSAParameters(GeneralToolkitLib.Encryption.RSAKeySetIdentity)</signature>
                        <name>ParseRSAPublicKeyOnlyInfo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BEGIN_RSA_PRIVATE_KEY</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BEGIN_RSA_PUBLIC_KEY</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>END_RSA_PRIVATE_KEY</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>END_RSA_PUBLIC_KEY</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b1024</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b16384</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b2048</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b4096</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b8192</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GeneralToolkitLib.Events.Unsubscriber`1</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.IObserver`1&lt;!0&gt;&gt;, System.IObserver`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IObserver`1&lt;!0&gt;</signature>
                        <name>_observer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IObserver`1&lt;!0&gt;&gt;</signature>
                        <name>_observers</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.CRC32</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Hashing.HashProgress&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int32)</signature>
                        <name>GetBigEndianBytes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int32, bool)</signature>
                        <name>GetBigEndianBytes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetCRC326HashAsHexString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MaxMemoryUsage</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Hashing.HashProgress&gt;</signature>
                        <name>_progress</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.HashProgress</signature>
                        <name>hashProgress</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.CRC32/CRC32Table</name>
                <newname>GeneralToolkitLib.Hashing.CRC32/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>dwCRC32Table</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumFileGenerator</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.IProgress`1&lt;GeneralToolkitLib.Hashing.ChecksumProgress&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int64, int32)</signature>
                        <name>FormatFileSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateMD5File</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateMD5FileAsync</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateSFVFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateSFVFileAsync</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CHECKSUM_FILE_HEADER</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHECKSUM_FILE_INFO</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_applicationName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Hashing.ChecksumProgress&gt;</signature>
                        <name>_progress</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.ChecksumProgress</signature>
                        <name>checksumProgress</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumFileGenerator/&lt;&gt;c__DisplayClass6_0</name>
                <newname>GeneralToolkitLib.Hashing.ChecksumFileGenerator/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GenrateSFVFileAsync&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.ChecksumFileGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.StringCollection</signature>
                        <name>filePathCollection</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sfvFilename</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumFileGenerator/&lt;&gt;c__DisplayClass8_0</name>
                <newname>GeneralToolkitLib.Hashing.ChecksumFileGenerator/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GenrateMD5FileAsync&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.ChecksumFileGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.StringCollection</signature>
                        <name>filePathCollection</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sfvFilename</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Completed</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataRead</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FilesCompleted</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FilesTotal</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalProgress</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Completed</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_DataRead</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FilesCompleted</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FilesTotal</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalProgress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Completed&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;DataRead&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FilesCompleted&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FilesTotal&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;TotalProgress&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Completed</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>DataRead</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FilesCompleted</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FilesTotal</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalProgress</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.HashProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesHashed</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesTotal</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_BytesHashed</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_BytesTotal</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;BytesHashed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;BytesTotal&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesHashed</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesTotal</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.IHashTransform</name>
                <methodlist>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.MD5</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ComputeHashOnString</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetMD5HashAsHexString</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Hashing.HashProgress)</signature>
                        <name>Report</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Cryptography.HashAlgorithm</signature>
                        <name>md5Implementation</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.SHA256</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>GetSHA256HashAsByteArray</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSHA256HashAsHexString</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetSHA256HashAsHexString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.SHA512</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>GetSHA512HashAsByteArray</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSHA512HashAsHexString</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetSHA512HashAsHexString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.Authenticator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>ConstantTimeEquals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GenerateKey</name>
                    </method>
                    <method>
                        <signature>string(string, unsigned int64)</signature>
                        <name>GetCodeInternal</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>RandomInt</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AvailableKeyChars</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KeyLength</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.RNGCryptoServiceProvider</signature>
                        <name>Random</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.CounterAuthenticator</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int64)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int64, unsigned int64&amp;)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>string(string, unsigned int64)</signature>
                        <name>GetCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>WindowSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.GoogleAuthenticator</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AuthenticatorLabel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyUri</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Secret</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AuthenticatorLabel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Secret</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AuthenticatorLabel&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Secret&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AuthenticatorLabel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyUri</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Secret</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.IUsedCodesManager</name>
                <methodlist>
                    <method>
                        <signature>void(int64, string, object)</signature>
                        <name>AddCode</name>
                    </method>
                    <method>
                        <signature>bool(int64, string, object)</signature>
                        <name>IsCodeUsed</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.TimeAuthenticator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.OTP.IUsedCodesManager, System.Func`1&lt;System.DateTime&gt;, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>bool(string, string, object)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>bool(string, string, object, System.DateTime&amp;)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetCode</name>
                    </method>
                    <method>
                        <signature>string(string, System.DateTime)</signature>
                        <name>GetCode</name>
                    </method>
                    <method>
                        <signature>int64(System.DateTime)</signature>
                        <name>GetInterval</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Lazy`1&lt;GeneralToolkitLib.OTP.IUsedCodesManager&gt;</signature>
                        <name>DefaultUsedCodeManager</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IntervalSeconds</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;System.DateTime&gt;</signature>
                        <name>NowFunc</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.OTP.IUsedCodesManager</signature>
                        <name>UsedCodeManager</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.TimeAuthenticator/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.OTP.IUsedCodesManager()</signature>
                        <name>&lt;.cctor&gt;b__11_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>&lt;.ctor&gt;b__4_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.OTP.TimeAuthenticator/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.UsedCodesManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64, string, object)</signature>
                        <name>AddCode</name>
                    </method>
                    <method>
                        <signature>bool(int64, string, object)</signature>
                        <name>IsCodeUsed</name>
                    </method>
                    <method>
                        <signature>void(object, System.Timers.ElapsedEventArgs)</signature>
                        <name>cleaner_Elapsed</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Timers.Timer</signature>
                        <name>cleaner</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.OTP.UsedCodesManager/UsedCode&gt;</signature>
                        <name>codes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>lockingTimeout</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ReaderWriterLock</signature>
                        <name>rwlock</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.UsedCodesManager/UsedCode</name>
                <newname>GeneralToolkitLib.OTP.UsedCodesManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int64, string, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Code</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Timestamp</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_UseDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_User</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Code</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Timestamp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_UseDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_User</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Code&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Timestamp&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;UseDate&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Configuration.SettingChangingEventArgs)</signature>
                        <name>SettingChangingEventHandler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>SettingsSavingEventHandler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BaseLogPath</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogFileExtension</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogPrefix</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BaseLogPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogFileExtension</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogPrefix</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BaseLogPath</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LogFileExtension</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LogPrefix</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteCompletelySilent</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>MoveToRecycleBin</name>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Storage.FileOperationAPIWrapper/SHFILEOPSTRUCT&amp;)</signature>
                        <name>SHFileOperation</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>bool(string, GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>bool(string, GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags)</signature>
                        <name>deleteFile</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_ALLOWUNDO</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_NOCONFIRMATION</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_NOERRORUI</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_SILENT</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_SIMPLEPROGRESS</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_WANTNUKEWARNING</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_COPY</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_DELETE</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_MOVE</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_RENAME</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper/SHFILEOPSTRUCT</name>
                <newname>GeneralToolkitLib.Storage.FileOperationAPIWrapper/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>fAnyOperationsAborted</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>fFlags</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hNameMappings</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwnd</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lpszProgressTitle</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pFrom</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pTo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>wFunc</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Filesystem.XMLDataElement</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Specialized.NameValueCollection()</signature>
                        <name>get_ElementProperties</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ElementType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ElementValue</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.NameValueCollection)</signature>
                        <name>set_ElementProperties</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ElementType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ElementValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Specialized.NameValueCollection</signature>
                        <name>&lt;ElementProperties&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ElementType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ElementValue&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Specialized.NameValueCollection()</signature>
                        <name>ElementProperties</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ElementType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ElementValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Filesystem.XMLImporter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadXMLFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Filesystem.XMLDataElement&gt;()</signature>
                        <name>get_XMLDocumentNodes</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Filesystem.XMLDataElement&gt;</signature>
                        <name>_dataElementList</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Filesystem.XMLDataElement&gt;()</signature>
                        <name>XMLDocumentNodes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.IStorageManager</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFileAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFile</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Threading.Tasks.Task`1&lt;!!0&gt;(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFileAsync</name>
                    </method>
                    <method>
                        <signature>bool(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFileAsync</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Memory.PasswordStorage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>Set</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.Storage.Memory.PasswordStorage/PasswordStorageItem&gt;</signature>
                        <name>_encodedDataDictionary</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Memory.PasswordStorage/PasswordStorageItem</name>
                <newname>GeneralToolkitLib.Storage.Memory.PasswordStorage/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Data</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PaddingLength</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.ArchiveFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFile(System.IO.FileInfo)</signature>
                        <name>CreateArchiveFile</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetFileInfoToBytes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToBytes</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_EndPosition</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFileInfo()</signature>
                        <name>get_FileInfo</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileInfoOffsetBytes</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_StartPosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UncompressedFileSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_EndPosition</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.ArchiveFileInfo)</signature>
                        <name>set_FileInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileInfoOffsetBytes</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_StartPosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UncompressedFileSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;CompressedFileSize&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;EndPosition&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFileInfo</signature>
                        <name>&lt;FileInfo&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileInfoOffsetBytes&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;StartPosition&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;UncompressedFileSize&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BaseAllocSize</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>CompressedFileSize</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>EndPosition</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFileInfo()</signature>
                        <name>FileInfo</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileInfoOffsetBytes</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>StartPosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UncompressedFileSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.ArchiveFileInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Attributes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_CRC32</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Extension</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullPath</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Attributes</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_CRC32</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Extension</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullPath</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Attributes&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;CRC32&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompressedFileSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreationTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Extension&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FullName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FullPath&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastWriteTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Attributes</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>CRC32</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CompressedFileSize</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreationTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Extension</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullPath</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastAccessTime</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastWriteTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.CompressionArchive</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.CompressionArchive(System.IO.Stream)</signature>
                        <name>DecodeHeader</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>VerifyFileHeader</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;()</signature>
                        <name>get_ArchiveFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;)</signature>
                        <name>set_ArchiveFiles</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;</signature>
                        <name>&lt;ArchiveFiles&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderEndBytes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderIdentifierBytes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HeaderPropertiesAllocSize</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;()</signature>
                        <name>ArchiveFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.CompressionBlock</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CompressedBlockSize</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_EndPosition</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_StartPosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UncompressedBlockSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CompressedBlockSize</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_EndPosition</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_StartPosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UncompressedBlockSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;CompressedBlockSize&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;EndPosition&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;StartPosition&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;UncompressedBlockSize&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BlockAllocSize</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>CompressedBlockSize</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>EndPosition</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>StartPosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UncompressedBlockSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.CompressionFileHeader</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.CompressionFileHeader(System.IO.Stream)</signature>
                        <name>DecodeHeader</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToBytes</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>VerifyFileHeader</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BlockSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;()</signature>
                        <name>get_CompressedDataBlocks</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DecompressedFileSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FileHeaderSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberOfBlocks</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BlockSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;)</signature>
                        <name>set_CompressedDataBlocks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_DecompressedFileSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FileHeaderSize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NumberOfBlocks</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;BlockSize&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;</signature>
                        <name>&lt;CompressedDataBlocks&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;DecompressedFileSize&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FileHeaderSize&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NumberOfBlocks&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderEndBytes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderIdentifierBytes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HeaderPropertiesAllocSize</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BlockSize</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;()</signature>
                        <name>CompressedDataBlocks</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>DecompressedFileSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FileHeaderSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NumberOfBlocks</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.DataAccessEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DataRead</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DataWritten</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DataRead</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DataWritten</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DataRead&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DataWritten&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>DataRead</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DataWritten</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, GeneralToolkitLib.Storage.Models.DataAccessEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.Storage.Models.DataAccessEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.ProgressMemoryStream</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32, int32)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ReadByte</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32, int32)</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>WriteByte</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>add_OnDataRead</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>add_OnDataWritten</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>remove_OnDataRead</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>remove_OnDataWritten</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataRead</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataWritten</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataRead</name>
                    </event>
                    <event>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataWritten</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.StorageManagerProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProgressPercentage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProgressPercentage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_progressPercentage</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ProgressPercentage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.StorageManagerSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool, int32, bool, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.StorageManagerSettings()</signature>
                        <name>GetDefaultSettings</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberOfThreads</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseEncryption</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseMultithreading</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NumberOfThreads</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseEncryption</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseMultithreading</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NumberOfThreads&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Password&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseEncryption&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseMultithreading&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>NumberOfThreads</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Password</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseEncryption</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseMultithreading</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.IRegistryAccess</name>
                <methodlist>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>DeleteSubKeyTree</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>ReadObjectFromRegistry</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SaveObjectToRegistry</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetupSubKeyPathAndAccessRights</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SubKeyCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ValueCount</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubKey</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowError</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SubKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryAccess</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>DeSerializeStructFromString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>DeleteSubKeyTree</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>DeserializeFromString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(System.Type)</signature>
                        <name>GetCompleteTypeName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>Read</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>ReadObjectFromRegistry</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SaveObjectToRegistry</name>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>SerializeObjectToString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>SerializeStructToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetupSubKeyPathAndAccessRights</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SubKeyCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ValueCount</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>VerifyObjectToSerialize</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Storage.Registry.RegistryDataTypes)</signature>
                        <name>Write</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryKey()</signature>
                        <name>get_BaseRegKeyCurrentUser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompanyName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubKey</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.RegistryKey)</signature>
                        <name>set_BaseRegKeyCurrentUser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowError</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.RegistryKey</signature>
                        <name>&lt;BaseRegKeyCurrentUser&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompanyName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowError&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubKey&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SerializedObjPrefix</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.RegistryKey()</signature>
                        <name>BaseRegKeyCurrentUser</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CompanyName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SubKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryAccess/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.PropertyInfo)</signature>
                        <name>&lt;SerializeStructToString&gt;b__26_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Registry.RegistryAccess/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Reflection.PropertyInfo,bool&gt;</signature>
                        <name>&lt;&gt;9__26_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryAccess/&lt;&gt;c__DisplayClass26_0</name>
                <newname>GeneralToolkitLib.Storage.Registry.RegistryAccess/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, System.Reflection.PropertyInfo)</signature>
                        <name>&lt;SerializeStructToString&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>obj</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeDWORD</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_data</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeMultiString</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_multiStringData</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeQWORD</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_data</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeString</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_data</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypes</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager</name>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.StorageManagerSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>CompressData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation)</signature>
                        <name>CompressDataMultithreaded</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFileAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeSerializeAndDecompressObjectFromEncryptedFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeSerializeAndDecompressObjectFromFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task(System.IO.Stream, System.IO.Stream, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>DeflateData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeflateDataMultithreded</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFile</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Threading.Tasks.Task`1&lt;!!0&gt;(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFileAsync</name>
                    </method>
                    <method>
                        <signature>bool(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeAndCompressObjectToFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.IO.MemoryStream(object, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeAndCompressObjectToMemoryStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFileAsync</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>VerifyObjectToSerialize</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BlockSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.StorageManagerSettings</signature>
                        <name>_settings</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass13_0</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;CompressDataMultithreaded&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bytesRead</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>inputStream</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>outStream</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass16_0</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DeflateData&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>compressedSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>inputStream</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>outStream</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.ICodeProgress</signature>
                        <name>progress</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass4_0</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;SerializeObjectToFileAsync&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>obj</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass6_0`1</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>&lt;DeserializeObjectFromFileAsync&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;DeserializeObjectFromFileAsync&gt;d__6`1</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;SerializeObjectToFileAsync&gt;d__4</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>obj</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManagerBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateFilePathIfItDoesNotExist</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetDirectoryFromFullPath</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.BarState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.BarState</signature>
                        <name>Moving</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.BarState</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.BarState</signature>
                        <name>Resizing</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.BarState</signature>
                        <name>ResizingLeft</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.BarState</signature>
                        <name>ResizingRight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.CreateAndVerifyOTP</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>CreateAndVerifyOTP_Load</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GenerateQRCode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel)</signature>
                        <name>SetVisiblePanel</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CancelClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CodeVerified</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnPrevious_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnShowVerificationPanel_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnVerifyCode_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.OTP.GoogleAuthenticator()</signature>
                        <name>get_GoogleAuthenticator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OTPVerificationCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CancelClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CodeVerified</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OTPVerificationCompleted</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;OTPVerificationCompleted&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CancelClicked</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CodeVerified</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.OTP.GoogleAuthenticator</signature>
                        <name>_googleAuthenticator</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_initialized</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator</signature>
                        <name>_qrCodeGenerator</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_qrCodeImage</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.OTP.TimeAuthenticator</signature>
                        <name>_timeAuthenticator</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnPrevious</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnShowVerificationPanel</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnVerifyCode</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpShowQR</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpVerifyOTP</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBoxQRCode</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>pnlGenerateOTP</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>pnlVerifyOTP</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtOTPCodeToVerify</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtOTPSecret</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtVerifyResult</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.OTP.GoogleAuthenticator()</signature>
                        <name>GoogleAuthenticator</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OTPVerificationCompleted</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CancelClicked</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CodeVerified</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel</signature>
                        <name>CreateQR</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel</signature>
                        <name>VerifyOTP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.CreateLicenceRequestControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnGenerate_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>get_RegistrationData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</signature>
                        <name>_registrationData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.RegistrationDataManager</signature>
                        <name>_registrationDataManager</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnGenerate</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblInfo</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtCompany</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtFirstName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtLastName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RichTextBox</signature>
                        <name>txtLicenceRequest</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>RegistrationData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.LicenceInfoControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>GetRegistrationDetails</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitControlState</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel)</signature>
                        <name>InitLicenceData</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>LicenceInfoControl_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCreateRequest_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnEnterLicence_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NotRegisteredInfoText</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ValidLicence</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NotRegisteredInfoText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NotRegisteredInfoText&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>CreateRequest</name>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>EnterLicence</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</signature>
                        <name>_licenceData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCreateRequest</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnEnterLicence</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpLicence</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtComputerId</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtLicenceInfo</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>NotRegisteredInfoText</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ValidLicence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.MouseAction</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>MouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>MouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>SetMousePosition</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.UserControls.BarState()</signature>
                        <name>get_BarState</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DeltaRemainder</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MouseButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Point()</signature>
                        <name>get_MousePosition</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Resizing</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.UserControls.BarState)</signature>
                        <name>set_BarState</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_DeltaRemainder</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MouseButtonDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>set_MousePosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Resizing</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.BarState</signature>
                        <name>&lt;BarState&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>&lt;DeltaRemainder&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;MouseButtonDown&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>&lt;MousePosition&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Resizing&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.UserControls.BarState()</signature>
                        <name>BarState</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>DeltaRemainder</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MouseButtonDown</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Point()</signature>
                        <name>MousePosition</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Resizing</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.ProgressWaitControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaintBackground</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ProgressWaitControl_Leave</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ProgressWaitControl_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ProgressWaitControl_Resize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RenderWaitState</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ReserSetWaitStateStatus</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Active</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Active</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timerPBar_Tick</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowText&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxStateValue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MinHeight</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MinWidth</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NumberOfCircles</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_active</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_repaintBackground</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_stateValue</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>timerPBar</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Active</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.SelectionBar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Point)</signature>
                        <name>IsPointOverSelectionEnd</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Point)</signature>
                        <name>IsPointOverSelectionStart</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Point)</signature>
                        <name>IsPointWithinBar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>MoveBar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseMove</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>ResizeBar</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_SelectionChanged</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackgroundColor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;()</signature>
                        <name>get_BackgroundHatchStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BarBorderColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BarColor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;()</signature>
                        <name>get_BarHatchStyle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BorderColor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxValue</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinValue</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SelectionEnd</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SelectionStart</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowBarBorder</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_SelectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackgroundColor</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;)</signature>
                        <name>set_BackgroundHatchStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BarBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BarColor</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;)</signature>
                        <name>set_BarHatchStyle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BorderColor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxValue</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinValue</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SelectionEnd</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SelectionStart</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowBarBorder</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MaxValue&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MinValue&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>SelectionChanged</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_backgroundColor</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;</signature>
                        <name>_backgroundHatchStyle</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_barBorderColor</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_barColor</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;</signature>
                        <name>_barHatchStyle</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_borderColor</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.MouseAction</signature>
                        <name>_mouseAction</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_selectionEnd</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_selectionStart</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showBarBorder</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BackgroundColor</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;()</signature>
                        <name>BackgroundHatchStyle</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BarBorderColor</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BarColor</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;System.Drawing.Drawing2D.HatchStyle&gt;()</signature>
                        <name>BarHatchStyle</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BorderColor</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxValue</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinValue</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SelectionEnd</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SelectionStart</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowBarBorder</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>SelectionChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.DataConverters.IniConfigFileSectionSerializer</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;(object)</signature>
                        <name>Serialize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[])</signature>
                        <name>DeserializeBinaryFormatterObjectDataInternal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[], bool)</signature>
                        <name>DeserializeObjectFromByteArray</name>
                    </method>
                    <method>
                        <signature>!0(string, GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat&lt;!0&gt;, bool)</signature>
                        <name>DeserializeObjectFromString</name>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[])</signature>
                        <name>DeserializeProtoBufferObjectDataInternal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>SerializeToByteArray</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>SerializeUsingBinaryFormatterInternal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>SerializeUsingProtoBuffersInternal</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat&lt;!0&gt;</signature>
                        <name>Base64</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat&lt;!0&gt;</signature>
                        <name>Hex</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Utility.DataConverters.RawSerializer`1</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[])</signature>
                        <name>RawDeserialize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[], int32)</signature>
                        <name>RawDeserialize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>RawSerialize</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.DelayOperation</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>void(object)</signature>
                        <name>CallBack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Action, int32)</signature>
                        <name>DelayAction</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.DelayOperation/DelayedAction</name>
                <newname>t/a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Action, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action</signature>
                        <name>_action</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_delayTime</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.FileSystem</name>
                <methodlist>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidDirectory</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.KeyValueNumericValidator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ValidateIntegerInput</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>ValidIntegerCodes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>ValidIntegerInputCodes</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetAlphaNumericString</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetBase64String</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetHexString</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetNumericString</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetPasswordString</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32)</signature>
                        <name>GetRandomData</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetRandomInt</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;string&gt;(WiFiPasswordGenerator.Settings.PasswordTypes, int32)</signature>
                        <name>GetRandomStringFromPasswordType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Cryptography.RandomNumberGenerator</signature>
                        <name>_randomNumberGenerator</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>alphaNumericStr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>letterStr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>numericStr</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>specialCharStr</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator/&lt;&gt;c__DisplayClass13_0</name>
                <newname>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;GetRandomStringFromPasswordType&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>length</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>passwordType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator/&lt;GetRandomStringFromPasswordType&gt;d__13</name>
                <newname>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Utility.RandomGenerator.SecureRandomGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;string&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;string&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>length</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>passwordType</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.SystemInfo</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSystemInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>RunQuery</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>UseBaseBoardManufacturer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseBaseBoardProduct</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseBiosManufacturer</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseBiosVersion</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseDiskDriveSignature</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UsePhysicalMediaSerialNumber</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseProcessorID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseVideoControllerCaption</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseWindowsSerialNumber</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.AccessHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DirectoryInfo)</signature>
                        <name>UserHasReadAccessToDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>_winId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.AccessHelper/&lt;&gt;c__DisplayClass2_0</name>
                <newname>GeneralToolkitLib.WindowsApi.AccessHelper/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Security.Claims.Claim)</signature>
                        <name>&lt;UserHasReadAccessToDirectory&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.AccessControl.FileSystemAccessRule</signature>
                        <name>fsAccessRules</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.FormState</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>Maximize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>Restore</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>Save</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>IsMaximized</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>bounds</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FormBorderStyle</signature>
                        <name>brdStyle</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>topMost</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FormWindowState</signature>
                        <name>winState</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.LoadSystemIcon</name>
                <methodlist>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>GetShieldIcon</name>
                    </method>
                    <method>
                        <signature>native int(native int, string, unsigned int32, int32, int32, unsigned int32)</signature>
                        <name>LoadImage</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.ScreenSaver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Disable</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Enable</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE(GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE)</signature>
                        <name>SetThreadExecutionState</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScreenSaverEnabled</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_screenSaverEnabled</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ScreenSaverEnabled</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE</name>
                <newname>GeneralToolkitLib.WindowsApi.ScreenSaver/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE</signature>
                        <name>ES_AWAYMODE_REQUIRED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE</signature>
                        <name>ES_CONTINUOUS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE</signature>
                        <name>ES_DISPLAY_REQUIRED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.ScreenSaver/EXECUTION_STATE</signature>
                        <name>ES_SYSTEM_REQUIRED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.CSUACSelfElevation</name>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ElevateProcessToRunAsAdmin</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetProcessIntegrityLevel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Initialize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsProcessElevated</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsRunAsAdmin</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsUserInAdminGroup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CurrentUserInAdminGroup</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayMessagBoxes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IntegrityLevel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsApplicationRuningnWithAdminAccess</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsElevated</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Button()</signature>
                        <name>get_UacButton</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayMessagBoxes</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Button)</signature>
                        <name>set_UacButton</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DisplayMessagBoxes&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>&lt;UacButton&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_inAdminGroup</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_integrityLevel</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isElevated</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isRunAsAdmin</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CurrentUserInAdminGroup</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>DisplayMessagBoxes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IntegrityLevel</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsApplicationRuningnWithAdminAccess</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsElevated</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.Button()</signature>
                        <name>UacButton</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.NativeMethods</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.WindowsApi.UserAccountControl.SafeTokenHandle, GeneralToolkitLib.WindowsApi.UserAccountControl.SECURITY_IMPERSONATION_LEVEL, GeneralToolkitLib.WindowsApi.UserAccountControl.SafeTokenHandle&amp;)</signature>
                        <name>DuplicateToken</name>
                    </method>
                    <method>
                        <signature>native int(native int, unsigned int32)</signature>
                        <name>GetSidSubAuthority</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.WindowsApi.UserAccountControl.SafeTokenHandle, GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS, native int, int32, int32&amp;)</signature>
                        <name>GetTokenInformation</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, GeneralToolkitLib.WindowsApi.UserAccountControl.SafeTokenHandle&amp;)</signature>
                        <name>OpenProcessToken</name>
                    </method>
                    <method>
                        <signature>int32(native int, unsigned int32, int32, native int)</signature>
                        <name>SendMessage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BCM_SETSHIELD</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_INSUFFICIENT_BUFFER</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SECURITY_MANDATORY_HIGH_RID</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SECURITY_MANDATORY_LOW_RID</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SECURITY_MANDATORY_MEDIUM_RID</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SECURITY_MANDATORY_SYSTEM_RID</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SECURITY_MANDATORY_UNTRUSTED_RID</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>STANDARD_RIGHTS_READ</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>STANDARD_RIGHTS_REQUIRED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_ADJUST_DEFAULT</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_ADJUST_GROUPS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_ADJUST_PRIVILEGES</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_ADJUST_SESSIONID</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_ALL_ACCESS</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_ASSIGN_PRIMARY</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_DUPLICATE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_IMPERSONATE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_QUERY</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_QUERY_SOURCE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TOKEN_READ</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.SECURITY_IMPERSONATION_LEVEL</name>
                <newname>l</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.SECURITY_IMPERSONATION_LEVEL</signature>
                        <name>SecurityAnonymous</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.SECURITY_IMPERSONATION_LEVEL</signature>
                        <name>SecurityDelegation</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.SECURITY_IMPERSONATION_LEVEL</signature>
                        <name>SecurityIdentification</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.SECURITY_IMPERSONATION_LEVEL</signature>
                        <name>SecurityImpersonation</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.SID_AND_ATTRIBUTES</name>
                <newname>n</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Attributes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Sid</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.SafeTokenHandle</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CloseHandle</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReleaseHandle</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_ELEVATION</name>
                <newname>o</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>TokenIsElevated</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_ELEVATION_TYPE</name>
                <newname>m</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_ELEVATION_TYPE</signature>
                        <name>TokenElevationTypeDefault</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_ELEVATION_TYPE</signature>
                        <name>TokenElevationTypeFull</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_ELEVATION_TYPE</signature>
                        <name>TokenElevationTypeLimited</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</name>
                <newname>j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>MaxTokenInfoClass</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenAccessInformation</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenAuditPolicy</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenDefaultDacl</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenElevation</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenElevationType</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenGroups</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenGroupsAndPrivileges</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenHasRestrictions</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenImpersonationLevel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenIntegrityLevel</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenLinkedToken</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenLogonSid</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenMandatoryPolicy</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenOrigin</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenOwner</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenPrimaryGroup</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenPrivileges</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenRestrictedSids</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSandBoxInert</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSessionId</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSessionReference</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSource</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenStatistics</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenType</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenUIAccess</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenUser</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenVirtualizationAllowed</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenVirtualizationEnabled</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.TOKEN_MANDATORY_LABEL</name>
                <newname>p</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.SID_AND_ATTRIBUTES</signature>
                        <name>Label</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</name>
                <newname>k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountAdministratorSid</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountCertAdminsSid</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountComputersSid</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountControllersSid</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountDomainAdminsSid</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountDomainGuestsSid</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountDomainUsersSid</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountEnterpriseAdminsSid</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountGuestSid</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountKrbtgtSid</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountPolicyAdminsSid</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountRasAndIasServersSid</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountReadonlyControllersSid</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAccountSchemaAdminsSid</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAnonymousSid</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinAuthenticatedUserSid</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBatchSid</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinAccountOperatorsSid</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinAdministratorsSid</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinAuthorizationAccessSid</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinBackupOperatorsSid</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinCertSvcDComAccessGroup</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinCryptoOperatorsSid</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinDCOMUsersSid</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinDomainSid</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinEventLogReadersGroup</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinGuestsSid</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinIUsersSid</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinIncomingForestTrustBuildersSid</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinNetworkConfigurationOperatorsSid</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinPerfLoggingUsersSid</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinPerfMonitoringUsersSid</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinPowerUsersSid</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinPreWindows2000CompatibleAccessSid</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinPrintOperatorsSid</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinRemoteDesktopUsersSid</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinReplicatorSid</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinSystemOperatorsSid</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinTerminalServerLicenseServersSid</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinBuiltinUsersSid</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinCacheablePrincipalsGroupSid</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinCreatorGroupServerSid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinCreatorGroupSid</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinCreatorOwnerRightsSid</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinCreatorOwnerServerSid</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinCreatorOwnerSid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinDialupSid</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinDigestAuthenticationSid</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinEnterpriseControllersSid</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinEnterpriseReadonlyControllersSid</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinHighLabelSid</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinIUserSid</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinInteractiveSid</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinLocalServiceSid</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinLocalSid</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinLocalSystemSid</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinLogonIdsSid</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinLowLabelSid</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinMediumLabelSid</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNTLMAuthenticationSid</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNetworkServiceSid</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNetworkSid</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNewEnterpriseReadonlyControllersSid</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNonCacheablePrincipalsGroupSid</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNtAuthoritySid</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinNullSid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinOtherOrganizationSid</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinProxySid</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinRemoteLogonIdSid</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinRestrictedCodeSid</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinSChannelAuthenticationSid</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinSelfSid</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinServiceSid</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinSystemLabelSid</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinTerminalServerSid</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinThisOrganizationSid</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinUntrustedLabelSid</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinWorldSid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.WELL_KNOWN_SID_TYPE</signature>
                        <name>WinWriteRestrictedCodeSid</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.WinApi</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSystemMetrics</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>SetWinFullScreen</name>
                    </method>
                    <method>
                        <signature>void(native int, native int, int32, int32, int32, int32, unsigned int32)</signature>
                        <name>SetWindowPos</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ScreenX</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ScreenY</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>HWND_TOP</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SM_CXSCREEN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SM_CYSCREEN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SWP_SHOWWINDOW</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ScreenX</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ScreenY</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.WindowEvents</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>SC_ARRANGE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_CLOSE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_CONTEXTHELP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_DEFAULT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_HOTKEY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_HSCROLL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_KEYMENU</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_MAXIMIZE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_MAXIMIZE2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_MINIMIZE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_MONITORPOWER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_MOUSEMENU</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_MOVE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_NEXTWINDOW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_PREVWINDOW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_RESTORE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_RESTORE2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_SCREENSAVE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_SEPARATOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_SIZE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_TASKLIST</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SC_VSCROLL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_KEYDOWN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_SYSCOMMAND</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_SYSKEYDOWN</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsApi.WindowsIdentityHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetAnonymousUser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUniqueSecurityIdForCurrentUser</name>
                    </method>
                    <method>
                        <signature>System.Security.Principal.WindowsIdentity()</signature>
                        <name>GetWindowsIdentityForCurrentUser</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>ImpersonateIdentity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPrtStringTypeBoolConstructor</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPtrConstructor</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPtrStringConstructor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPtrStringTypeConstructor</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>LogonUser</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>UseProperties</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WiFiPasswordGenerator.Settings.PasswordTypes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>AlphaNumeric</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>Base64</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>Hex</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>Numeric</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.PasswordTypes</signature>
                        <name>StandardMixedChars</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WiFiPasswordGenerator.Settings.QR_CodeLevels</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.QR_CodeLevels</signature>
                        <name>H</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.QR_CodeLevels</signature>
                        <name>L</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.QR_CodeLevels</signature>
                        <name>M</name>
                    </field>
                    <field>
                        <signature>WiFiPasswordGenerator.Settings.QR_CodeLevels</signature>
                        <name>Q</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>ImageViewer.exe</name>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>&lt;EntryFilePath&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`1</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void(!0)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_EntryFilePath</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;EntryFilePath&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>EntryFilePath</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;FilePath&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Count&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`2</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Count</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_FilePath</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Count&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;FilePath&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>Count</name>
                        <newname>b</newname>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>FilePath</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.AboutBox</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCompany</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCopyright</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyDescription</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyProduct</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyTitle</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyVersion</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelCompanyName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelCopyright</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelProductName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelVersion</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>logoPictureBox</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>okButton</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>textBoxDescription</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Configuration.AutofacConfig</name>
                <methodlist>
                    <method>
                        <signature>Autofac.IContainer()</signature>
                        <name>CreateContainer</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Configuration.IApplicationBuildConfig</name>
                <methodlist>
                    <method>
                        <signature>string(bool)</signature>
                        <name>ApplicationLogFilePath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DebugMode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserDataPath</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>DebugMode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserDataPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataBinding.TreeViewDataContext</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.TreeView, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BindData</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>ExpandNode</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.TreeNodeCollection, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>ExpandNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.TreeNode&gt;(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>RecursiveAddTreeNodes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>TreeView_AfterCheck</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>TreeView_AfterCollapse</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>TreeView_AfterExpand</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>TreeView_AfterSelect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.ControlEventArgs)</signature>
                        <name>TreeView_ControlAdded</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.DataContracts.BookmarkFolder</signature>
                        <name>_rootFolder</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TreeView</signature>
                        <name>_treeView</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataBinding.TreeViewDataContext/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;RecursiveAddTreeNodes&gt;b__11_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.DataBinding.TreeViewDataContext/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.BookmarkFolder,int32&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.Bookmark</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BoookmarkName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompletePath</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Directory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParentFolderId</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SizeFormated</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SortOrder</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BoookmarkName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompletePath</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Directory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParentFolderId</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Size</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SortOrder</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BoookmarkName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompletePath&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreationTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Directory&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastWriteTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ParentFolderId&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SortOrder&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BoookmarkName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CompletePath</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreationTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Directory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastAccessTime</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastWriteTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ParentFolderId</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Size</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SizeFormated</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SortOrder</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.BookmarkContainer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder, string, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContainerId</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastUpdate</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.BookmarkFolder()</signature>
                        <name>get_RootFolder</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ContainerId</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastUpdate</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>set_RootFolder</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ContainerId&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastUpdate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.BookmarkFolder</signature>
                        <name>&lt;RootFolder&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ContainerId</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastUpdate</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.BookmarkFolder()</signature>
                        <name>RootFolder</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.BookmarkFolder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.BookmarkFolder&gt;()</signature>
                        <name>get_BookmarkFolders</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.Bookmark&gt;()</signature>
                        <name>get_Bookmarks</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParentFolderId</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SortOrder</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ImageView.DataContracts.BookmarkFolder&gt;)</signature>
                        <name>set_BookmarkFolders</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ImageView.DataContracts.Bookmark&gt;)</signature>
                        <name>set_Bookmarks</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParentFolderId</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SortOrder</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.BookmarkFolder&gt;</signature>
                        <name>&lt;BookmarkFolders&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.Bookmark&gt;</signature>
                        <name>&lt;Bookmarks&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Id&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ParentFolderId&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SortOrder&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.BookmarkFolder&gt;()</signature>
                        <name>BookmarkFolders</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.Bookmark&gt;()</signature>
                        <name>Bookmarks</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Id</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ParentFolderId</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SortOrder</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ColorDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ColorDataModel(System.Drawing.Color)</signature>
                        <name>CreateFromColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(ImageView.DataContracts.ColorDataModel)</signature>
                        <name>CreateFromColorDataModel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>ToColor</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_A</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_B</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_G</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_R</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_A</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_B</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_G</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_R</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;A&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;B&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;G&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;R&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>A</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>B</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>G</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>R</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ImageReference</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompletePath</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Directory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompletePath</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Directory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Size</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompletePath&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreationTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Directory&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastWriteTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CompletePath</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreationTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Directory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastAccessTime</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastWriteTime</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Size</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ImageViewApplicationSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisablePasswordProtectBookmarks</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>EnablePasswordProtectBookmarks</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveDuplicateEntriesWithIgnoreCase</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>SetMainFormPosition</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AlwaysOntop</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutoRandomizeCollection</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticUpdateCheck</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ConfirmApplicationShutdown</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnableAutoLoadFunctionFromMenu</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnableWindowDocking</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ImageCacheSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ImageTransitionTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastFolderLocation</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastUpdateCheck</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_LastUsedSearchPaths</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.PointDataModel()</signature>
                        <name>get_MainFormPosition</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.SizeDataModel()</signature>
                        <name>get_MainFormSize</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ColorDataModel()</signature>
                        <name>get_MainWindowBackgroundColor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxThumbnails</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation()</signature>
                        <name>get_NextImageAnimation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PasswordProtectBookmarks</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PrimaryImageSizeMode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ScreenMinXOffset</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ScreenWidthOffset</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowImageViewFormsInTaskBar</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowNextPrevControlsOnEnterWindow</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowSwitchImageButtons</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SlideshowInterval</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.PointDataModel()</signature>
                        <name>get_ThumbnailFormLocation</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.SizeDataModel()</signature>
                        <name>get_ThumbnailFormSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ThumbnailSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ToggleSlideshowWithThirdMouseButton</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseSavedMainFormPosition</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity()</signature>
                        <name>get_WindowDockingProximity</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AlwaysOntop</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutoRandomizeCollection</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticUpdateCheck</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ConfirmApplicationShutdown</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DefaultKey</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnableAutoLoadFunctionFromMenu</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnableWindowDocking</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_ImageCacheSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ImageTransitionTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastFolderLocation</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastUpdateCheck</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_LastUsedSearchPaths</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.PointDataModel)</signature>
                        <name>set_MainFormPosition</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.SizeDataModel)</signature>
                        <name>set_MainFormSize</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.ColorDataModel)</signature>
                        <name>set_MainWindowBackgroundColor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxThumbnails</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation)</signature>
                        <name>set_NextImageAnimation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PasswordProtectBookmarks</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PrimaryImageSizeMode</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ScreenMinXOffset</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ScreenWidthOffset</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowImageViewFormsInTaskBar</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowNextPrevControlsOnEnterWindow</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowSwitchImageButtons</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SlideshowInterval</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.PointDataModel)</signature>
                        <name>set_ThumbnailFormLocation</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.SizeDataModel)</signature>
                        <name>set_ThumbnailFormSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ThumbnailSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ToggleSlideshowWithThirdMouseButton</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseSavedMainFormPosition</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity)</signature>
                        <name>set_WindowDockingProximity</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AlwaysOntop&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AutoRandomizeCollection&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AutomaticUpdateCheck&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ConfirmApplicationShutdown&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DefaultKey&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;EnableAutoLoadFunctionFromMenu&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;EnableWindowDocking&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;ImageCacheSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ImageTransitionTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LastFolderLocation&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastUpdateCheck&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;LastUsedSearchPaths&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.PointDataModel</signature>
                        <name>&lt;MainFormPosition&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.SizeDataModel</signature>
                        <name>&lt;MainFormSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ColorDataModel</signature>
                        <name>&lt;MainWindowBackgroundColor&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MaxThumbnails&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>&lt;NextImageAnimation&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PasswordDerivedString&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PasswordProtectBookmarks&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;PrimaryImageSizeMode&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ScreenMinXOffset&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ScreenWidthOffset&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowImageViewFormsInTaskBar&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowNextPrevControlsOnEnterWindow&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowSwitchImageButtons&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SlideshowInterval&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.PointDataModel</signature>
                        <name>&lt;ThumbnailFormLocation&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.SizeDataModel</signature>
                        <name>&lt;ThumbnailFormSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ThumbnailSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ToggleSlideshowWithThirdMouseButton&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseSavedMainFormPosition&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity</signature>
                        <name>&lt;WindowDockingProximity&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AlwaysOntop</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>AutoRandomizeCollection</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>AutomaticUpdateCheck</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ConfirmApplicationShutdown</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultKey</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EnableAutoLoadFunctionFromMenu</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EnableWindowDocking</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>ImageCacheSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ImageTransitionTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastFolderLocation</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastUpdateCheck</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>LastUsedSearchPaths</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.PointDataModel()</signature>
                        <name>MainFormPosition</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.SizeDataModel()</signature>
                        <name>MainFormSize</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.ColorDataModel()</signature>
                        <name>MainWindowBackgroundColor</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxThumbnails</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation()</signature>
                        <name>NextImageAnimation</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PasswordDerivedString</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PasswordProtectBookmarks</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PrimaryImageSizeMode</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ScreenMinXOffset</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ScreenWidthOffset</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowImageViewFormsInTaskBar</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowNextPrevControlsOnEnterWindow</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowSwitchImageButtons</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SlideshowInterval</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.PointDataModel()</signature>
                        <name>ThumbnailFormLocation</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.SizeDataModel()</signature>
                        <name>ThumbnailFormSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ThumbnailSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ToggleSlideshowWithThirdMouseButton</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseSavedMainFormPosition</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity()</signature>
                        <name>WindowDockingProximity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ImageViewApplicationSettings/&lt;&gt;c__DisplayClass131_0</name>
                <newname>ImageView.DataContracts.ImageViewApplicationSettings/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;RemoveDuplicateEntriesWithIgnoreCase&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>searchPath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>FadeIn</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>SlideDown</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>SlideLeft</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>SlideRight</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>SlideUp</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity</signature>
                        <name>Far</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity</signature>
                        <name>Near</name>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/WindowDockProximity</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.PointDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.PointDataModel(System.Drawing.Point)</signature>
                        <name>CreateFromPoint</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Point()</signature>
                        <name>ToPoint</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_X</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Y</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_X</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Y</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;X&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Y&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>X</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Y</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.SizeDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.SizeDataModel(System.Drawing.Size)</signature>
                        <name>CreateFromSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>ToSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Height</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Width</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Height&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Width&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Height</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Width</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ThumbnailDatabase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DataStroragePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DatabaseId</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LasteUpdate</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.ThumbnailEntry&gt;()</signature>
                        <name>get_ThumbnailEntries</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DataStroragePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DatabaseId</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LasteUpdate</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ImageView.DataContracts.ThumbnailEntry&gt;)</signature>
                        <name>set_ThumbnailEntries</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DataStroragePath&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DatabaseId&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LasteUpdate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.ThumbnailEntry&gt;</signature>
                        <name>&lt;ThumbnailEntries&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DataStroragePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DatabaseId</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LasteUpdate</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.DataContracts.ThumbnailEntry&gt;()</signature>
                        <name>ThumbnailEntries</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.DataContracts.ThumbnailEntry</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Directory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FilePosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_SourceImageDate</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_SourceImageLength</name>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_UniqueId</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Directory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FilePosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Length</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_SourceImageDate</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_SourceImageLength</name>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_UniqueId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;Date&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Directory&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FilePosition&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Length&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;SourceImageDate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;SourceImageLength&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;UniqueId&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Directory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FilePosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>SourceImageDate</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>SourceImageLength</name>
                    </property>
                    <property>
                        <signature>System.Guid()</signature>
                        <name>UniqueId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.BookmarkActions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>CreatedBookmark</name>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>CreatedBookmarkFolder</name>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>DeletedBookmark</name>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>DeletedBookmarkFolder</name>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>EditedBookmark</name>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>EditedBookmarkFolder</name>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>LoadedNewDataSource</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.BookmarkUpdatedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Events.BookmarkActions, System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.Events.BookmarkActions()</signature>
                        <name>get_BookmarkAction</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_BookmarkType</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.BookmarkActions)</signature>
                        <name>set_BookmarkAction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_BookmarkType</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Events.BookmarkActions</signature>
                        <name>&lt;BookmarkAction&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;BookmarkType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ImageView.Events.BookmarkActions()</signature>
                        <name>BookmarkAction</name>
                    </property>
                    <property>
                        <signature>System.Type()</signature>
                        <name>BookmarkType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.BookmarkUpdatedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Events.BookmarkUpdatedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Events.BookmarkUpdatedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.ImageViewFormImageInfo</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.Form, string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentImageFileName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FormIsClosing</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ImagesViewed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FormIsClosing</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentImageFileName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;FormIsClosing&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ImagesViewed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentImageFileName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FormIsClosing</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ImagesViewed</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.ImageViewFormInfo</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FormHasFocus</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FormLostFocus</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FormHasFocus</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;FormHasFocus&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;FormLostFocus&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>FormHasFocus</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FormLostFocus</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.ImageViewFormInfoBase</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Form()</signature>
                        <name>get_FormReference</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>&lt;FormReference&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.Form()</signature>
                        <name>FormReference</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.IntervalChangedDeligate</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Events.IntervalEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Events.IntervalEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.IntervalEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Interval</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Interval</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Interval&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Interval</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.TransitionImageUpdateEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_TransitionImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_TransitionImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>&lt;TransitionImage&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Image()</signature>
                        <name>TransitionImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Events.TransitionImageUpdateEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Events.TransitionImageUpdateEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Events.TransitionImageUpdateEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FileBrowser</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService, ImageView.Services.ImageLoaderService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;OpenImporterForm&gt;b__16_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>FileBrowser_FormClosing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FileBrowser_Load</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>FileListMenuStrip_Opening</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ImageView.Models.SortableBindingList`1&lt;ImageView.Models.ImageReferenceElement&gt;()</signature>
                        <name>GetSortableBindingSource</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>OpenImporterForm</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SavePathListToSettings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnBrowse_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOpenImporter_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnRefreshList_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>copyFilepathToolStripMenuItem_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewBindingCompleteEventArgs)</signature>
                        <name>dataGridViewLoadedImages_DataBindingComplete</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>deleteSelectedFilesToolStripMenuItem_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.AutoCompleteStringCollection()</signature>
                        <name>get_PathCollection</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedPath</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DragEventArgs)</signature>
                        <name>grpImportSection_DragDrop</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DragEventArgs)</signature>
                        <name>grpImportSection_DragEnter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openWithDefaultApplicationToolStripMenuItem_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedPath</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtBaseDirectory_KeyUp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>txtBaseDirectory_Validating</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.AutoCompleteStringCollection</signature>
                        <name>&lt;PathCollection&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>FileListMenuStrip</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>_imageLoaderService</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_selectedPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>bindingSourceForImageService</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnBrowse</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOpenImporter</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnRefreshList</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyFilepathToolStripMenuItem</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>creationTimeDataGridViewTextBoxColumn</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridView</signature>
                        <name>dataGridViewLoadedImages</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>deleteSelectedFilesToolStripMenuItem</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>directoryDataGridViewTextBoxColumn</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>enableLoadFormOnEnterKey</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>fileExtentionDataGridViewTextBoxColumn</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>fileNameDataGridViewTextBoxColumn</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FolderBrowserDialog</signature>
                        <name>folderBrowserDialog1</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpImportSection</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>lastAccessTimeDataGridViewTextBoxColumn</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>lastWriteTimeDataGridViewTextBoxColumn</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblImagesLoaded</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openWithDefaultApplicationToolStripMenuItem</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>sizeInKbDataGridViewTextBoxColumn</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator1</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtBaseDirectory</name>
                        <newname>ad</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.AutoCompleteStringCollection()</signature>
                        <name>PathCollection</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SelectedPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormAddBookmark</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Managers.BookmarkManager, ImageView.Services.BookmarkService, ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateTreeFolder</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormAddBookmark_Load</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormAddBookmark_Shown</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point, ImageView.Models.ImageReferenceElement)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFolderDropdownList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCreateFolder_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSave_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>comboBoxBookmarkFolders_SelectedIndexChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.CreateParams()</signature>
                        <name>get_CreateParams</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>mainPanel_MouseDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtBookmarkName_KeyUp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager</signature>
                        <name>_bookmarkManager</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>_bookmarkService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Models.ImageReferenceElement</signature>
                        <name>_imageReference</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>bookmarkFolderBindingSource</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCreateFolder</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSave</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>comboBoxBookmarkFolders</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuStrip1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.CustomPanel</signature>
                        <name>mainPanel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>newItemToolStripMenuItem</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>toolStripMenuItem1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem3</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtBookmarkName</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.CreateParams()</signature>
                        <name>CreateParams</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormBookmarks</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.BookmarkService, ImageView.Managers.BookmarkManager, ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.Enums.TreeViewFolderStateChange, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>AlterTreeViewState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>BookmarksTree_AfterSelect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>DeleteSelectedBookmark</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormBookmarks_Load</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitBookmarksDataGridViev</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitBookmarksDataSource</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Events.BookmarkUpdatedEventArgs)</signature>
                        <name>Instance_OnBookmarksUpdate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadImageFromSelectedRow</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadPreviewImageFromSelectedRow</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReLoadBookmarks</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SelectBookmarksFile</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SelectBookmarksFilePassword</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SelectFirstRow</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>addFolderToolStripMenuItem_Click</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewCellMouseEventArgs)</signature>
                        <name>bookmarksDataGridView_CellMouseDoubleClick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewCellEventArgs)</signature>
                        <name>bookmarksDataGridView_CellMouseEnter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewCellEventArgs)</signature>
                        <name>bookmarksDataGridView_CellMouseLeave</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewCellMouseEventArgs)</signature>
                        <name>bookmarksDataGridView_CellMouseMove</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewCellMouseEventArgs)</signature>
                        <name>bookmarksDataGridView_ColumnHeaderMouseClick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>bookmarksDataGridView_KeyDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>bookmarksDataGridView_MouseDown</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bookmarksDataGridView_MouseEnter</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bookmarksDataGridView_MouseLeave</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>bookmarksDataGridView_MouseMove</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>bookmarksDataGridView_MouseUp</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewRowPostPaintEventArgs)</signature>
                        <name>bookmarksDataGridView_RowPostPaint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewRowPrePaintEventArgs)</signature>
                        <name>bookmarksDataGridView_RowPrePaint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bookmarksDataGridView_SelectionChanged</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DragEventArgs)</signature>
                        <name>bookmarksTree_DragDrop</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DragEventArgs)</signature>
                        <name>bookmarksTree_DragEnter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DragEventArgs)</signature>
                        <name>bookmarksTree_DragOver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>contextMenuStripFolders_Opening</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>deleteFolderToolStripMenuItem_Click</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>deleteToolStripMenuItem_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>editToolStripMenuItem_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>maximizePreviewAreaToolStripMenuItem_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openAndIncludeToolStripMenuItem_Click</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openAndReplaceToolStripMenuItem_Click</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>removeDuplicatesToolStripMenuItem_Click</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>renameFolderMenuItem_Click</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>renameToolStripMenuItem_Click</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restorePreviewAreaToolStripMenuItem_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>saveAsToolStripMenuItem_Click</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>saveToolStripMenuItem_Click</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>setDefaultDriveToolStripMenuItem_Click</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>showOverlayPreviewToolStripMenuItem_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>tryToFixBrokenLinksToolStripMenuItem_Click</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CustomContentHeight</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ImageList</signature>
                        <name>FolderImages</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager</signature>
                        <name>_bookmarkManager</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>_bookmarkService</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>_dragBoxFromMouseDown</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_gridViewGradientBackgroundColorStart</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_gridViewGradientBackgroundColorStop</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_gridViewSelectionBorderColor</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.OverlayFormManager</signature>
                        <name>_overlayFormManager</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataBinding.TreeViewDataContext</signature>
                        <name>_treeViewDataContext</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>_valueFromMouseDown</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>addFolderToolStripMenuItem</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>bookmarkBindingSource</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>bookmarkFolderBindingSource</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridView</signature>
                        <name>bookmarksDataGridView</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TreeView</signature>
                        <name>bookmarksTree</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuStripBookmarks</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuStripFolders</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>dataGridViewTextBoxColumn1</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>dataGridViewTextBoxColumn2</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>dataGridViewTextBoxColumn3</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>deleteFolderToolStripMenuItem</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>deleteToolStripMenuItem</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>editToolStripMenuItem</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>fileToolStripMenuItem</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FolderBrowserDialog</signature>
                        <name>folderBrowserDialog1</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MenuStrip</signature>
                        <name>mainWinMenu</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>maximizePreviewAreaToolStripMenuItem</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openAndIncludeToolStripMenuItem</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openAndReplaceToolStripMenuItem</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.OpenFileDialog</signature>
                        <name>openFileDialog1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openToolStripMenuItem</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBoxPreview</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>removeDuplicatesToolStripMenuItem</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>renameFolderMenuItem</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>renameToolStripMenuItem</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>restorePreviewAreaToolStripMenuItem</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>saveAsToolStripMenuItem</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SaveFileDialog</signature>
                        <name>saveFileDialog1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>saveToolStripMenuItem</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>showOverlayPreviewToolStripMenuItem</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>sizeFormatedDataGridViewTextBoxColumn</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SplitContainer</signature>
                        <name>splitContainer1</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SplitContainer</signature>
                        <name>splitContainer2</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem2</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator2</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator3</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator4</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>toolsToolStripMenuItem</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>tryToFixBrokenLinksToolStripMenuItem</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>viewToolStripMenuItem</name>
                        <newname>aq</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormBookmarks/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;ReLoadBookmarks&gt;b__13_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.FormBookmarks/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,int32&gt;</signature>
                        <name>&lt;&gt;9__13_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormBookmarks/&lt;bookmarksDataGridView_ColumnHeaderMouseClick&gt;d__40</name>
                <newname>ImageView.FormBookmarks/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormBookmarks</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewCellMouseEventArgs</signature>
                        <name>e</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormBookmarks/&lt;bookmarksDataGridView_MouseLeave&gt;d__25</name>
                <newname>ImageView.FormBookmarks/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormBookmarks</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormBookmarks/&lt;tryToFixBrokenLinksToolStripMenuItem_Click&gt;d__53</name>
                <newname>ImageView.FormBookmarks/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormBookmarks</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;int32&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormEditBookmark</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormEditBookmark_Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNewName</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>InitForRename</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.RenameBookmark</signature>
                        <name>renameBookmark1</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormImageDetails</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormImageDetails_Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.DataGridView</signature>
                        <name>ImageDetailsDataGrid</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>ImgInfoGroupBox</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_filename</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnClose</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>createDateDataGridViewTextBoxColumn</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>fileDirectoryDataGridViewTextBoxColumn</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>fileNameDataGridViewTextBoxColumn</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>imageDimenstionsDataGridViewTextBoxColumn</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>imageInformationModelBindingSource</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>lastModifiedDateDataGridViewTextBoxColumn</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>sizeFormatedDataGridViewTextBoxColumn</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormImageSizeModes</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormImageSizeModes_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSave_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>comboBoxImageSizeModes_SelectedIndexChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.PictureBoxSizeMode()</signature>
                        <name>get_ImageSizeMode</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PictureBoxSizeMode)</signature>
                        <name>set_ImageSizeMode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.PictureBoxSizeMode</signature>
                        <name>&lt;ImageSizeMode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSave</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>comboBoxImageSizeModes</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.PictureBoxSizeMode()</signature>
                        <name>ImageSizeMode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormImageView</name>
                <methodlist>
                    <method>
                        <signature>void(int32, ImageView.FormAddBookmark, ImageView.Managers.BookmarkManager, ImageView.Services.ApplicationSettingsService, ImageView.Services.ImageCacheService, ImageView.Services.ImageLoaderService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormImageView_Activated</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormImageView_Deactivate</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosedEventArgs)</signature>
                        <name>FormImageView_FormClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormImageView_Load</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.ImageReferenceElement)</signature>
                        <name>LoadNewImageFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnClientSizeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseWheel</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnWindowStateChanged</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Message&amp;, System.Windows.Forms.Keys)</signature>
                        <name>ProcessCmdKey</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReloadSettings</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ResetZoom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetZoomAndRepaint</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetImageReferenceCollection</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetNextImage</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetPreviousImage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.IDisposable(System.IObserver`1&lt;ImageView.Events.ImageViewFormInfoBase&gt;)</signature>
                        <name>Subscribe</name>
                    </method>
                    <method>
                        <signature>System.Drawing.PointF(System.Drawing.Point, float32)</signature>
                        <name>TranslatePoint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateSwitchImgPanelState</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bookmarkImageToolStripMenuItem_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>copyFilepathToolStripMenuItem_Click</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FormId</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ImageSourceDataAvailable</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openWithDefaultProgramToolStripMenuItem_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureBox_MouseClick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureBox_MouseDown</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox_MouseEnter</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox_MouseLeave</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureBox_MouseMove</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureBox_MouseUp</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.PaintEventArgs)</signature>
                        <name>pictureBox_Paint</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FormId&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ChangeImagePanelWidth</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>ZoomMin</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager</signature>
                        <name>_bookmarkManager</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_currentImage</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_dataReady</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormAddBookmark</signature>
                        <name>_formAddBookmark</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageCacheService</signature>
                        <name>_imageCache</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>_imageLoaderService</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.Models.ImageReferenceCollection</signature>
                        <name>_imageReferenceCollection</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>ImageView.Events.ImageViewFormImageInfo</signature>
                        <name>_imageViewFormInfo</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_imagesViewed</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>ImageView.Models.ImageReferenceElement</signature>
                        <name>_imgRef</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_imgx</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_imgy</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FormWindowState</signature>
                        <name>_lastFormState</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>_mouseDown</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_mouseHover</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormImageView/MouseHoverInfo</signature>
                        <name>_mouseHoverInfo</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_mousepressed</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IObserver`1&lt;ImageView.Events.ImageViewFormInfoBase&gt;&gt;</signature>
                        <name>_observers</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_requireFocusNotification</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showSwitchImgOnMouseOverWindow</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showSwitchImgPanel</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_startx</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_starty</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_switchImgButtonsEnabled</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_zoom</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>bookmarkImageToolStripMenuItem</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuStrip1</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyFilepathToolStripMenuItem</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openWithDefaultProgramToolStripMenuItem</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem1</name>
                        <newname>ai</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>FormId</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ImageSourceDataAvailable</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormImageView/MouseHoverInfo</name>
                <newname>ImageView.FormImageView/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetState</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_LeftButtonPressed</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OverAnyButton</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OverLeftPanel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OverRightPanel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_StateChanged</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_LeftButtonPressed</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OverLeftPanel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OverRightPanel</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_StateChanged</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;StateChanged&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_leftButtonPressed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_overLeftButton</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_overRightButton</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormInputText</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormInputText_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, System.Func`1&lt;string&gt;)</signature>
                        <name>InitFormData</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpBoxInput</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblInputText</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtInput</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormLoad</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ImageLoaderService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>FormLoad_FormClosing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormLoad_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormLoad_Shown</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Services.ProgressEventArgs)</signature>
                        <name>Instance_OnImportComplete</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Services.ProgressEventArgs)</signature>
                        <name>Instance_OnProgressUpdate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetBasePath</name>
                    </method>
                    <method>
                        <signature>void(string, int32, float64, bool)</signature>
                        <name>UpdateProgressOnLocalThread</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnStart_Click</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_baseSearchPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>_imageLoaderService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnStart</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblBasePath</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblImagesLoaded</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblStatus</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ProgressBar</signature>
                        <name>progressBar1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>timerProgressUpdate</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormLoad/&lt;btnStart_Click&gt;d__9</name>
                <newname>ImageView.FormLoad/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormLoad</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormLoad/UpdateProgressDelegate</name>
                <newname>ImageView.FormLoad/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(string, int32, float64, bool, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(string, int32, float64, bool)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.FormAddBookmark, ImageView.Services.BookmarkService, ImageView.FormSettings, ImageView.Services.ApplicationSettingsService, ImageView.Services.ImageCacheService, ImageView.Services.ImageLoaderService, Autofac.ILifetimeScope, ImageView.Services.UserInteractionService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;ToolTipSlideshowState_Popup&gt;b__58_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;openBookmarksToolStripMenuItem_Click_1&gt;b__84_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddNextImageToCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>AllowAplicatonExit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AutoArrangeOnMultipleScreens</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AutoArrangeOnSingleScreen</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ChangeImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisplaySlideshowStatus</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormMain_Activated</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>FormMain_FormClosing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>FormMain_KeyDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>FormMain_KeyUp</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormMain_Load</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosedEventArgs)</signature>
                        <name>FormThumbnailView_FormClosed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleImportDataComplete</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Instance_OnImageWasDeleted</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Services.ProgressEventArgs)</signature>
                        <name>Instance_OnImportComplete</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Instance_OnRegistryAccessDenied</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Instance_OnSettingsSaved</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadNewImageFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnImageLoadComplete</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenImageInDefaultApp</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task(System.Drawing.Image, System.Drawing.Image, ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation, int32)</signature>
                        <name>PerformImageTransition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetImageReferenceCollection</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Models.UserInteraction.UserInformationEventArgs)</signature>
                        <name>ShowInfoMessageOnNativeThread</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Models.UserInteraction.UserQuestionEventArgs)</signature>
                        <name>ShowQuestionOnNativeThread</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SyncUserControlStateWithAppSettings</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ToggleFullscreen</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ToggleSlideshow</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ToggleSlideshowMenuState</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.PopupEventArgs)</signature>
                        <name>ToolTipSlideshowState_Popup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Models.UserInteraction.UserInformationEventArgs)</signature>
                        <name>_interactionService_UserInformationRecieved</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Models.UserInteraction.UserQuestionEventArgs)</signature>
                        <name>_interactionService_UserQuestionRecieved</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>aboutToolStripMenuItem_Click</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>addBookmarkToolStripMenuItem_Click</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>autoArrangeToolStripMenuItem_Click</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>autoLoadPreviousFolderToolStripMenuItem_Click</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>checkForUpdatesToolStripMenuItem_Click</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>closeAllToolStripMenuItem_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>copyFileToolStripMenuItem_Click</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>copyFilepathToolStripMenuItem_Click</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>exitToolStripMenuItem_Click</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Events.IntervalEventArgs)</signature>
                        <name>formSetSlideshowInterval_OnIntervalChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ImageSourceDataAvailable</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>hideAllToolStripMenuItem_Click</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>imageDetailsToolStripMenuItem_Click</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosedEventArgs)</signature>
                        <name>imageViewForm_FormClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>menuItemLoadBookmarkedImages_Click</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>menuItemOpenImage_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>newWindowToolStripMenuItem_Click</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openBookmarksToolStripMenuItem_Click_1</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openFolderToolStripMenuItem_Click</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openInDefaultApplicationToolStripMenuItem1_Click</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openInDefaultApplicationToolStripMenuItem_Click</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openSettingsToolStripMenuItem_Click</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openThumbnailsToolStripMenuItem1_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.AsyncCompletedEventArgs)</signature>
                        <name>pictureBox1_LoadCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureBox1_MouseClick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.AsyncCompletedEventArgs)</signature>
                        <name>pictureBoxAnimation_LoadCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>randomizeCollectionToolStripMenuItem_Click</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>setImageScalingModeToolStripMenuItem_Click</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>setIntervalToolStripMenuItem_Click</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>showAllToolStripMenuItem_Click</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>showFullscreenToolStripMenuItem_Click</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>startToolStripMenuItem_Click</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>stopToolStripMenuItem_Click</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>thumbnailDBSettingsToolStripMenuItem_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timerSlideShow_Tick</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>topMostToolStripMenuItem_Click</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>windowsToolStripMenuItem1_Click</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>_bookmarkService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>_changeImageAnimation</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_dataReady</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormAddBookmark</signature>
                        <name>_formAddBookmark</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormBookmarks</signature>
                        <name>_formBookmarks</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormRestartWithAdminPrivileges</signature>
                        <name>_formRestartWithAdminPrivileges</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormSettings</signature>
                        <name>_formSettings</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.FormState</signature>
                        <name>_formState</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormThumbnailView</signature>
                        <name>_formThumbnailView</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormWindows</signature>
                        <name>_formWindows</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_fullScreen</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageCacheService</signature>
                        <name>_imageCacheService</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>_imageLoaderService</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.Models.ImageReferenceCollection</signature>
                        <name>_imageReferenceCollection</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_imageTransitionRunning</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_imageViewFormIdCnt</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.FormImageView&gt;</signature>
                        <name>_imageViewFormList</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UserInteractionService</signature>
                        <name>_interactionService</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>_pictureBoxAnimation</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Autofac.ILifetimeScope</signature>
                        <name>_scope</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_winKeyDown</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_windowTitle</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>aboutToolStripMenuItem</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>addBookmarkToolStripMenuItem</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>autoArrangeToolStripMenuItem</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>autoLoadPreviousFolderToolStripMenuItem</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>bookmarksToolStripMenuItem</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>checkForUpdatesToolStripMenuItem</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>closeAllToolStripMenuItem</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyFileToolStripMenuItem</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyFilepathToolStripMenuItem</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>editToolStripMenuItem</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>exitToolStripMenuItem</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>fileToolStripMenuItem</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FolderBrowserDialog</signature>
                        <name>folderBrowserDialog1</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>hideAllToolStripMenuItem</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>imageDetailsToolStripMenuItem</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>menuItemLoadBookmarkedImages</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>menuItemOpenImage</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MenuStrip</signature>
                        <name>menuStrip1</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>newWindowToolStripMenuItem</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openBookmarksToolStripMenuItem</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openBrowserToolStripMenuItem</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.OpenFileDialog</signature>
                        <name>openFileDialog1</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openInDefaultApplicationToolStripMenuItem</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openInDefaultApplicationToolStripMenuItem1</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openSettingsToolStripMenuItem</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openThumbnailsToolStripMenuItem1</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>otherToolStripMenuItem</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox1</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>randomizeCollectionToolStripMenuItem</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>resetZoomToolStripMenuItem</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>setImageScalingModeToolStripMenuItem</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>setIntervalToolStripMenuItem</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>settingsToolStripMenuItem</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>showAllToolStripMenuItem</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>showFullscreenToolStripMenuItem</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>slideshowToolStripMenuItem</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>startToolStripMenuItem</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>stopToolStripMenuItem</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>thumbnailDBSettingsToolStripMenuItem</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>thumbnailsToolStripMenuItem</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>timerSlideShow</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem1</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator10</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator11</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator12</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator13</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator2</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator3</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator4</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator5</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator6</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator7</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator8</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator9</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolTip</signature>
                        <name>toolTipSlideshowState</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>topMostToolStripMenuItem</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>vivewToolStripMenuItem</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>windowsToolStripMenuItem</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>windowsToolStripMenuItem1</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>zoomInToolStripMenuItem</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>zoomOutToolStripMenuItem</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>zoomToolStripMenuItem</name>
                        <newname>bc</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ImageSourceDataAvailable</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;&lt;ToolTipSlideshowState_Popup&gt;b__58_0&gt;d</name>
                <newname>ImageView.FormMain/i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Forms.Screen)</signature>
                        <name>&lt;AutoArrangeOnMultipleScreens&gt;b__38_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.FormMain/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Windows.Forms.Screen,int32&gt;</signature>
                        <name>&lt;&gt;9__38_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;&gt;c__DisplayClass35_0</name>
                <newname>ImageView.FormMain/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PerformImageTransition&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>animation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>animationTime</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>currentImage</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>nextImage</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;PerformImageTransition&gt;d__35</name>
                <newname>ImageView.FormMain/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain/&lt;&gt;c__DisplayClass35_0</signature>
                        <name>&lt;&gt;8__1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings/ChangeImageAnimation</signature>
                        <name>animation</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>animationTime</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>currentImage</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>nextImage</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;checkForUpdatesToolStripMenuItem_Click&gt;d__72</name>
                <newname>ImageView.FormMain/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UpdateService</signature>
                        <name>&lt;updateService&gt;5__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;menuItemLoadBookmarkedImages_Click&gt;d__68</name>
                <newname>ImageView.FormMain/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/&lt;pictureBoxAnimation_LoadCompleted&gt;d__63</name>
                <newname>ImageView.FormMain/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>&lt;currentImage&gt;5__1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>&lt;nextImage&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/NativeThreadFunctin</name>
                <newname>ImageView.FormMain/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/NativeThreadFunctinUserInfo</name>
                <newname>ImageView.FormMain/b</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Models.UserInteraction.UserInformationEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Models.UserInteraction.UserInformationEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormMain/NativeThreadFunctinUserQuestion</name>
                <newname>ImageView.FormMain/c</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Models.UserInteraction.UserQuestionEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Models.UserInteraction.UserQuestionEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormRestartWithAdminPrivileges</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormRestartWithAdminPrivileges_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SyncControlStateWithCoreObjectState</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCansel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnRestartWithAdminAccess_Click</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>_formIcon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.WindowsApi.UserAccountControl.CSUACSelfElevation</signature>
                        <name>_uacElevation</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnRestartWithAdminAccess</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpBoxUACElevation</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ImageList</signature>
                        <name>imageList1</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblApplicationRunningAsAdmin</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblCurrenUserInAdminGrp</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblIntegrityLevel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblProcessElevated</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.CustomPanel</signature>
                        <name>pnlMainImage</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolTip</signature>
                        <name>toolTipStartWithAdminRights</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormSetDefaultDrive</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormSetDefaultDrive_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(System.IO.DriveInfo)</signature>
                        <name>GetDriveInfoListItemText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedDrive</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedDrive</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SelectedDrive&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.DriveInfo&gt;</signature>
                        <name>availableDriveInfos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>cbDriveList</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpSetDefaultDrive</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>SelectedDrive</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormSetDefaultDrive/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DriveInfo)</signature>
                        <name>&lt;FormSetDefaultDrive_Load&gt;b__6_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.FormSetDefaultDrive/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.IO.DriveInfo,bool&gt;</signature>
                        <name>&lt;&gt;9__6_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormSetSlideshowInterval</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormSetSlideshowInterval_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.IntervalChangedDeligate)</signature>
                        <name>add_OnIntervalChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.IntervalChangedDeligate)</signature>
                        <name>remove_OnIntervalChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>txtInterval_Validated</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Events.IntervalChangedDeligate</signature>
                        <name>OnIntervalChanged</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_timerInterval</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUDInterval</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>ImageView.Events.IntervalChangedDeligate</signature>
                        <name>OnIntervalChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.FormSettings</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.BookmarkService, ImageView.Services.ApplicationSettingsService, ImageView.Services.ImageCacheService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormSettings_Load</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateCacheSizeLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateCacheStats</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>chkPasswordProtectBookmarks_CheckedChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>chkPasswordProtectBookmarks_MouseUp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.PopupEventArgs)</signature>
                        <name>toolTipUpdateDescription_Popup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBarCacheSize_Scroll</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBarFadeTime_Scroll</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>BackgroundImageDropdown</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>ChkAutomaticallyCheckForUpdates</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TrackbarDivider</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>_bookmarkService</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageCacheService</signature>
                        <name>_imageCacheService</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_selectedCacheSize</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.ColorSelectComboBox</signature>
                        <name>backgroundColorDropdownList</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ImageList</signature>
                        <name>backgroundImageList</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>checkBox1</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkAutoRandomize</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkConfirmExit</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkEnableAutoload</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkPasswordProtectBookmarks</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkShowSwitchImgButtons</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkToggleSlidshowWithThirdMouseButton</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkUsePrimaryScreen</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox2</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox3</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox4</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox5</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox6</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ImageList</signature>
                        <name>imageListSettings</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label10</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label11</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label12</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label13</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label14</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label15</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label16</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label18</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label19</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label20</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label21</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label23</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label5</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label6</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label7</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label8</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label9</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblCacheItems</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblCacheSize</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblColorOption1</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblFadeTime</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblFreeSpace</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblMinOffset</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblScreenLayout</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblUsedSpace</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblWidthOffset</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericScreenMinOffset</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericScreenWidthOffset</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown1</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown2</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown3</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown4</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown5</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown6</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown7</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericUpDown8</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel1</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel2</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel3</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel4</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ProgressBar</signature>
                        <name>pbarPercentUsed</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rbImgTransformFadeIn</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rbImgTransformNone</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rbOverControlArea</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rbOverWindow</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rdDynamicAutoArrange</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rdStaticAutoArange</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TabControl</signature>
                        <name>tabControlSettings</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TabPage</signature>
                        <name>tabPageCacheSettings</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TabPage</signature>
                        <name>tabPageColorSettings</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TabPage</signature>
                        <name>tabPageGeneral</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TabPage</signature>
                        <name>tabPageWindowSettings</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel1</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel2</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel3</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel4</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolTip</signature>
                        <name>toolTipUpdateDescription</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBarCacheSize</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBarFadeTime</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormSettings/&lt;&gt;c__DisplayClass6_0</name>
                <newname>ImageView.FormSettings/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Color)</signature>
                        <name>&lt;FormSettings_Load&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>savedColor</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailSettings</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ThumbnailService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;btnRemoveFilesNotFound_Click&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormThumbnailSettings_Load</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ThumbnailService_CompletedThumbnailScan</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ThumbnailService_StartedThumbnailScan</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateInformationLabels</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnClearDatabase_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnClose_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnReduceCachSize_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnRemoveFilesNotFound_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnRunDefragmentJob_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnUpdateCurrentUsage_Click</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>_thumbnailService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnClearDatabase</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnClose</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnReduceCachSize</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnRemoveFilesNotFound</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnRunDefragmentJob</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnUpdateCurrentUsage</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox3</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox4</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label5</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblCachedItems</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblCurrentDbSize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblInfo</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.NumericUpDown</signature>
                        <name>numericSize</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolTip</signature>
                        <name>toolTipOptimize</name>
                        <newname>t</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailSettings/&lt;&gt;c__DisplayClass10_0</name>
                <newname>ImageView.FormThumbnailSettings/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;btnReduceCachSize_Click&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.FormThumbnailSettings</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>truncatedSize</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailSettings/&lt;btnReduceCachSize_Click&gt;d__10</name>
                <newname>ImageView.FormThumbnailSettings/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormThumbnailSettings</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailSettings/&lt;btnRemoveFilesNotFound_Click&gt;d__9</name>
                <newname>ImageView.FormThumbnailSettings/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormThumbnailSettings</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailView</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.FormAddBookmark, ImageView.Services.ApplicationSettingsService, ImageView.Services.ImageCacheService, ImageView.Services.ThumbnailService, ImageView.Services.ImageLoaderService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnGenerate_Click&gt;b__14_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnOptimize_Click&gt;b__30_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>FormThumbnailView_Closing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>FormThumbnailView_FormClosing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormThumbnailView_Load</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosedEventArgs)</signature>
                        <name>FrmDirectoryScan_FormClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.Control&gt;()</signature>
                        <name>GenerateThumbnails</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideMaximizedView</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OptimizeDatabaseComplete</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>PictureBox_MouseClick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetUpdateDatabaseEnabledState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>UpdatePictureBoxList</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ValidateThumbnailSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>_applicationSettingsService_OnSettingsSaved</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnGenerate_Click</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOptimize_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnScanDirectory_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSettings_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>menuItemBookmark_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>menuItemCopyPath_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>menuItemOpenInDefApp_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>picBoxMaximized_MouseClick</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormAddBookmark</signature>
                        <name>_formAddBookmark</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageCacheService</signature>
                        <name>_imageCacheService</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>_imageLoaderService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_maxThumbnails</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_maximizedImgFilename</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.Control&gt;</signature>
                        <name>_pictureBoxList</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.ThumbnailScanDirectory</signature>
                        <name>_thumbnailScan</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>_thumbnailService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_thumbnailSize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnGenerate</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOptimize</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnScanDirectory</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSettings</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuFullSizeImg</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FlowLayoutPanel</signature>
                        <name>flowLayoutPanel1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpBoxControls</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>menuItemBookmark</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>menuItemCopyPath</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>menuItemOpenInDefApp</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>picBoxMaximized</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.StatusStrip</signature>
                        <name>statusStrip</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailView/&lt;btnGenerate_Click&gt;d__14</name>
                <newname>ImageView.FormThumbnailView/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormThumbnailView</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormThumbnailView/&lt;btnOptimize_Click&gt;d__30</name>
                <newname>ImageView.FormThumbnailView/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormThumbnailView</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormWindows</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosedEventArgs)</signature>
                        <name>FormWindows_FormClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormWindows_Load</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Windows.Forms.Screen, int32, int32, int32, System.Drawing.Point)</signature>
                        <name>GetWindowSizeFromScreen</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>OnError</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.ImageViewFormInfoBase)</signature>
                        <name>OnNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RenderWindowList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreFocusOnPreviouslyActiveImageForm</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreFocusToMainForm</name>
                    </method>
                    <method>
                        <signature>void(ImageView.FormImageView)</signature>
                        <name>Subscribe</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ImageView.FormImageView&gt;)</signature>
                        <name>SubscribeToList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unsubscribe</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnActivate_Click</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCascade_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnClose_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnHide_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnShow_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSideBySide_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>chkShowInTaskBar_CheckedChanged</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IDisposable&gt;</signature>
                        <name>_formDisposables</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Windows.Forms.Form,ImageView.FormWindows/ImageWindowListItem&gt;</signature>
                        <name>_imageWindowListItems</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>_lastActiveImageViewForm</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_winCnt</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnActivate</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCascade</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnClose</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnHide</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnShow</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSideBySide</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkShowInTaskBar</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox2</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ListBox</signature>
                        <name>listBoxActiveWindows</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormWindows/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Forms.Screen)</signature>
                        <name>&lt;btnSideBySide_Click&gt;b__18_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.FormWindows/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Windows.Forms.Screen,int32&gt;</signature>
                        <name>&lt;&gt;9__18_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.FormWindows/ImageWindowListItem</name>
                <newname>ImageView.FormWindows/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Form()</signature>
                        <name>get_WindowRef</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>set_WindowRef</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>&lt;WindowRef&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.InputForms.FormGetPassword</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>FormGetPassword_KeyUp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormGetPassword_Shown</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleOkClick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PasswordString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PasswordVerified</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PasswordString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PasswordVerified</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>txtPassword_KeyPress</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PasswordDerivedString&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PasswordString&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PasswordVerified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>PasswordDerivedString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PasswordString</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PasswordVerified</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.InputForms.FormInputRow</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.InputForms.FormInputRow/InputFormData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormInputRowData_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormInputRow_Shown</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidateInput</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserInputText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserInputText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserInputText&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.InputForms.FormInputRow/InputFormData</signature>
                        <name>_inputFormData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBoxMain</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelInput</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtInput</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>UserInputText</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.InputForms.FormInputRow/InputFormData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupBoxText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LabelText</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaximumCharacters</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinimumCharacters</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WindowText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupBoxText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LabelText</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaximumCharacters</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinimumCharacters</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WindowText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupBoxText&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LabelText&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MaximumCharacters&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MinimumCharacters&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;WindowText&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>GroupBoxText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LabelText</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaximumCharacters</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinimumCharacters</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WindowText</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.InputForms.FormSetPassword</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidatePasswords</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VerifiedPassword</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VerifiedPassword</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>txtPassword1_Enter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>txtPassword2_Enter</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VerifiedPassword&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>errorMessage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>passwordPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword2</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>VerifiedPassword</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Interfaces.IExceptionEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Library.EventHandlers.ExceptionEventHandler)</signature>
                        <name>add_OnUnexpectedException</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Library.EventHandlers.ExceptionEventHandler)</signature>
                        <name>remove_OnUnexpectedException</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist>
                    <event>
                        <signature>ImageView.Library.EventHandlers.ExceptionEventHandler</signature>
                        <name>OnUnexpectedException</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Interfaces.IMageViewFormWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>ReloadSettings</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetZoomAndRepaint</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Library.AutofacModules.ImageViewModule</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Autofac.ContainerBuilder)</signature>
                        <name>Load</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Library.AutofacModules.LoggingModule</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Autofac.ContainerBuilder)</signature>
                        <name>Load</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Library.CustomAttributes.NotificationIdAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Guid)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_NotificationId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>_notificationId</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Guid()</signature>
                        <name>NotificationId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Library.EventHandlers.ExceptionEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Exception, object[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object[]()</signature>
                        <name>get_AdditionalPatameters</name>
                    </method>
                    <method>
                        <signature>System.Exception()</signature>
                        <name>get_Exception</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FunctionName</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_SourceClass</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_TargetClass</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>set_Exception</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FunctionName</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_SourceClass</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_TargetClass</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>&lt;AdditionalPatameters&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Exception</signature>
                        <name>&lt;Exception&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FunctionName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;SourceClass&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;TargetClass&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object[]()</signature>
                        <name>AdditionalPatameters</name>
                    </property>
                    <property>
                        <signature>System.Exception()</signature>
                        <name>Exception</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FunctionName</name>
                    </property>
                    <property>
                        <signature>System.Type()</signature>
                        <name>SourceClass</name>
                    </property>
                    <property>
                        <signature>System.Type()</signature>
                        <name>TargetClass</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Library.EventHandlers.ExceptionEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Library.EventHandlers.ExceptionEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Library.EventHandlers.ExceptionEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.Bookmark(string, string, ImageView.Models.ImageReferenceElement)</signature>
                        <name>AddBookmark</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.BookmarkFolder(string, string)</signature>
                        <name>AddBookmarkFolder</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BookmarkDatasourceUpdated</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.BookmarkUpdatedEventArgs)</signature>
                        <name>BookmarkUpdated</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.Bookmark)</signature>
                        <name>DeleteBookmark</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>DeleteBookmarkByFilename</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>DeleteBookmarkFolder</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteBookmarkFolderById</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;int32&gt;(string)</signature>
                        <name>FixBrokenLinksFromBaseDir</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;ImageView.DataContracts.Bookmark&gt;(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>GetAllBookmarksIncludingSubfolders</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;ImageView.DataContracts.Bookmark&gt;(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>GetAllBookmarksRecursive</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;ImageView.DataContracts.Bookmark&gt;(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>GetAllBookmarsWithIncorrectPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.BookmarkFolder(ImageView.DataContracts.BookmarkFolder, string)</signature>
                        <name>GetBookmarkFolderById</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.Bookmark(string, string, ImageView.Models.ImageReferenceElement, int32)</signature>
                        <name>InsertBookmark</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.BookmarkFolder(string, string, int32)</signature>
                        <name>InsertBookmarkFolder</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>LoadFromFile</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>LoadFromFileAndAppendBookmarks</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.Bookmark, string)</signature>
                        <name>MoveBookmark</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkContainer)</signature>
                        <name>PrepareContainer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>RecursiveAdd</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder, string)</signature>
                        <name>RecursiveValidationOnContainer</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>ReindexSortOrder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>RemoveDuplicates</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>RemoveDuplicates</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>SaveToFile</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder, string, System.Windows.Forms.SortOrder)</signature>
                        <name>UpdateSortOrder</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>VerifyIntegrityOfBookmarFolder</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.BookmarkUpdatedEventHandler)</signature>
                        <name>add_OnBookmarksUpdate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsModified</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_LoadedFromFile</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.BookmarkFolder()</signature>
                        <name>get_RootFolder</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Events.BookmarkUpdatedEventHandler)</signature>
                        <name>remove_OnBookmarksUpdate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsModified</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_LoadedFromFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>set_RootFolder</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;LoadedFromFile&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.BookmarkFolder</signature>
                        <name>&lt;RootFolder&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Events.BookmarkUpdatedEventHandler</signature>
                        <name>OnBookmarksUpdate</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.BookmarkContainer</signature>
                        <name>_bookmarkContainer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsModified</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>LoadedFromFile</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.BookmarkFolder()</signature>
                        <name>RootFolder</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>ImageView.Events.BookmarkUpdatedEventHandler</signature>
                        <name>OnBookmarksUpdate</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;InsertBookmark&gt;b__28_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.Bookmark, ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;InsertBookmark&gt;b__28_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;InsertBookmarkFolder&gt;b__26_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;InsertBookmarkFolder&gt;b__26_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;ReindexSortOrder&gt;b__24_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.BookmarkFolder, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;ReindexSortOrder&gt;b__24_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;ReindexSortOrder&gt;b__24_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.Bookmark, ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;ReindexSortOrder&gt;b__24_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;RemoveDuplicates&gt;b__36_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;RemoveDuplicates&gt;b__36_1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;RemoveDuplicates&gt;b__36_2</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.BookmarkFolder,int32&gt;</signature>
                        <name>&lt;&gt;9__24_0</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;ImageView.DataContracts.BookmarkFolder&gt;</signature>
                        <name>&lt;&gt;9__24_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,int32&gt;</signature>
                        <name>&lt;&gt;9__24_2</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;ImageView.DataContracts.Bookmark&gt;</signature>
                        <name>&lt;&gt;9__24_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.BookmarkFolder,int32&gt;</signature>
                        <name>&lt;&gt;9__26_1</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;ImageView.DataContracts.BookmarkFolder&gt;</signature>
                        <name>&lt;&gt;9__26_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,int32&gt;</signature>
                        <name>&lt;&gt;9__28_1</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;ImageView.DataContracts.Bookmark&gt;</signature>
                        <name>&lt;&gt;9__28_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,string&gt;</signature>
                        <name>&lt;&gt;9__36_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,string&gt;</signature>
                        <name>&lt;&gt;9__36_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,string&gt;</signature>
                        <name>&lt;&gt;9__36_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass23_0</name>
                <newname>ImageView.Managers.BookmarkManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;RecursiveAdd&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.DataContracts.Bookmark</signature>
                        <name>bookmark</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass23_1</name>
                <newname>ImageView.Managers.BookmarkManager/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;RecursiveAdd&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;RecursiveAdd&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.BookmarkFolder,bool&gt;</signature>
                        <name>&lt;&gt;9__2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.BookmarkFolder</signature>
                        <name>folder</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass26_0</name>
                <newname>ImageView.Managers.BookmarkManager/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>&lt;InsertBookmarkFolder&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>index</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass28_0</name>
                <newname>ImageView.Managers.BookmarkManager/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;InsertBookmark&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>index</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass36_0</name>
                <newname>ImageView.Managers.BookmarkManager/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;RemoveDuplicates&gt;b__3</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,bool&gt;</signature>
                        <name>&lt;&gt;9__3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.BookmarkFolder</signature>
                        <name>rootFolder</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass41_0</name>
                <newname>ImageView.Managers.BookmarkManager/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;UpdateSortOrder&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;UpdateSortOrder&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>sortBy</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.BookmarkManager/&lt;&gt;c__DisplayClass43_0</name>
                <newname>ImageView.Managers.BookmarkManager/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;FixBrokenLinksFromBaseDir&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedPath</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.FileManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearDirectoryAccessCache</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteBinaryContainer</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetDbSize</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasAccessToDirectory</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>IsUpToDate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LockDatabase</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(int32, int32)</signature>
                        <name>ReadImage</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ImageView.DataContracts.ThumbnailEntry&gt;)</signature>
                        <name>RecreateDatabase</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveToDisk</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnlockDatabase</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.FileEntry(System.Drawing.Image)</signature>
                        <name>WriteImage</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLocked</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsLocked</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsLocked&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DatabaseImgDataFilename</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TemporaryDatabaseFilename</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,bool&gt;</signature>
                        <name>_directoryAccessDictionary</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_fileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.FileStream</signature>
                        <name>_fileStream</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLocked</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.FileManager/&lt;&gt;c__DisplayClass19_0</name>
                <newname>ImageView.Managers.FileManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DriveInfo)</signature>
                        <name>&lt;HasAccessToDirectory&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>volume</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ManagerBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.OverlayFormManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;UpdateToLastImageWhenTimeoutExpires&gt;b__21_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideForm</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>HideFormWithDelay</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Point, bool)</signature>
                        <name>LoadImageAndDisplayForm</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateToLastImageWhenTimeoutExpires</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ActiveRow</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HideImageDelay</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEnabled</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ShowImageDelay</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ActiveRow</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_HideImageDelay</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsEnabled</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ShowImageDelay</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ActiveRow&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsEnabled&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>LockObject</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>_formOverlayImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_hideImageDelay</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.OverlayFormManager/ImageSourceAndLocation</signature>
                        <name>_imageSourceState</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.BookmarkPreviewOverlayUserControl</signature>
                        <name>_overlayUserControl</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_showImageDelay</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ActiveRow</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>HideImageDelay</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEnabled</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ShowImageDelay</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.OverlayFormManager/&lt;&lt;UpdateToLastImageWhenTimeoutExpires&gt;b__21_0&gt;d</name>
                <newname>ImageView.Managers.OverlayFormManager/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.OverlayFormManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;isMoving&gt;5__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.OverlayFormManager/&lt;HideFormWithDelay&gt;d__23</name>
                <newname>ImageView.Managers.OverlayFormManager/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.OverlayFormManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.OverlayFormManager/ImageSourceAndLocation</name>
                <newname>ImageView.Managers.OverlayFormManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ImagePath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsAwaitingDelay</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LastShownImagePath</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>LastShownImageTime</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>MousePoint</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>MousePointDelta</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Managers.FileManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image, string, string)</signature>
                        <name>AddImageToCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ClearDatabase</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseFileHandle</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>GetFileCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetImageFilenamesInDirectory</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfCachedThumbnails</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetSubdirectoryList</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(string)</signature>
                        <name>GetThumbnail</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetThumbnailDbFileSize</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Concurrent.ConcurrentQueue`1&lt;ImageView.Managers.ThumbnailManager/ThumbnailData&gt;)</signature>
                        <name>GetThumbnailEntry</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(string)</signature>
                        <name>LoadImageFromCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(string)</signature>
                        <name>LoadImageFromFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LoadThumbnailDatabase</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OptimizeDatabase</name>
                    </method>
                    <method>
                        <signature>int32(string, System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;)</signature>
                        <name>PerformThumbnailScan</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;int32&gt;(System.Collections.Generic.IEnumerable`1&lt;string&gt;, int32, System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;)</signature>
                        <name>PerformThumbnailScanMultithreaded</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Concurrent.ConcurrentQueue`1&lt;ImageView.Managers.ThumbnailManager/ThumbnailData&gt;)</signature>
                        <name>ProcessThumbnailData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int64)</signature>
                        <name>ReduceCachSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>RemoveAllMissingFilesAndRecreateDb</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Managers.ThumbnailManager/ThumbnailData)</signature>
                        <name>SaveThumbnailData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>SaveThumbnailDatabase</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task(string, System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;, bool)</signature>
                        <name>StartThumbnailScan</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopThumbnailScan</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ThumbnailIsCached</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.ThumbnailDatabase)</signature>
                        <name>ValidateThumbnailDatabase</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLoaded</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsModified</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsLoaded</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsModified</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsLoaded&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsModified&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DatabaseFilename</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DatabaseKey</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ImageSearchPatterb</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_abortScan</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,ImageView.DataContracts.ThumbnailEntry&gt;</signature>
                        <name>_fileDictionary</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.FileManager</signature>
                        <name>_fileManager</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>_fileNameRegExp</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isRunningThumbnailScan</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ThumbnailDatabase</signature>
                        <name>_thumbnailDatabase</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLoaded</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsModified</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;LoadThumbnailDatabase&gt;b__23_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ThumbnailEntry(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;LoadThumbnailDatabase&gt;b__23_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;OptimizeDatabase&gt;b__25_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;OptimizeDatabase&gt;b__25_1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ThumbnailEntry(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;OptimizeDatabase&gt;b__25_2</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(System.Threading.Tasks.Task)</signature>
                        <name>&lt;PerformThumbnailScanMultithreaded&gt;b__29_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ReduceCachSize&gt;b__42_0</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ReduceCachSize&gt;b__42_1</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int64(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ReduceCachSize&gt;b__42_2</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int32(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ReduceCachSize&gt;b__42_3</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ReduceCachSize&gt;b__42_4</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ThumbnailEntry(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ReduceCachSize&gt;b__42_5</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType0`1&lt;string&gt;(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ValidateThumbnailDatabase&gt;b__35_0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType1`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,int32&gt;(System.Linq.IGrouping`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,ImageView.DataContracts.ThumbnailEntry&gt;)</signature>
                        <name>&lt;ValidateThumbnailDatabase&gt;b__35_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(&lt;&gt;f__AnonymousType1`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,int32&gt;)</signature>
                        <name>&lt;ValidateThumbnailDatabase&gt;b__35_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(&lt;&gt;f__AnonymousType1`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,int32&gt;)</signature>
                        <name>&lt;ValidateThumbnailDatabase&gt;b__35_3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ValidateThumbnailDatabase&gt;b__35_5</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Managers.ThumbnailManager/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,string&gt;</signature>
                        <name>&lt;&gt;9__23_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,ImageView.DataContracts.ThumbnailEntry&gt;</signature>
                        <name>&lt;&gt;9__23_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,string&gt;</signature>
                        <name>&lt;&gt;9__25_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,string&gt;</signature>
                        <name>&lt;&gt;9__25_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,ImageView.DataContracts.ThumbnailEntry&gt;</signature>
                        <name>&lt;&gt;9__25_2</name>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;System.Threading.Tasks.Task&gt;</signature>
                        <name>&lt;&gt;9__29_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,&lt;&gt;f__AnonymousType0`1&lt;string&gt;&gt;</signature>
                        <name>&lt;&gt;9__35_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,ImageView.DataContracts.ThumbnailEntry&gt;,&lt;&gt;f__AnonymousType1`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,int32&gt;&gt;</signature>
                        <name>&lt;&gt;9__35_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType1`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,int32&gt;,bool&gt;</signature>
                        <name>&lt;&gt;9__35_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType1`2&lt;&lt;&gt;f__AnonymousType0`1&lt;string&gt;,int32&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__35_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,bool&gt;</signature>
                        <name>&lt;&gt;9__35_5</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,bool&gt;</signature>
                        <name>&lt;&gt;9__42_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,string&gt;</signature>
                        <name>&lt;&gt;9__42_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,int64&gt;</signature>
                        <name>&lt;&gt;9__42_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,int32&gt;</signature>
                        <name>&lt;&gt;9__42_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,string&gt;</signature>
                        <name>&lt;&gt;9__42_4</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.ThumbnailEntry,ImageView.DataContracts.ThumbnailEntry&gt;</signature>
                        <name>&lt;&gt;9__42_5</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/&lt;&gt;c__DisplayClass29_0</name>
                <newname>ImageView.Managers.ThumbnailManager/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>&lt;PerformThumbnailScanMultithreaded&gt;b__0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PerformThumbnailScanMultithreaded&gt;b__3</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Managers.ThumbnailManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;string&gt;</signature>
                        <name>dirQueue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>filesProccessed</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;</signature>
                        <name>progress</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Concurrent.ConcurrentQueue`1&lt;ImageView.Managers.ThumbnailManager/ThumbnailData&gt;</signature>
                        <name>scannedThumbnailEntries</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threads</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalNumberOfFiles</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/&lt;&gt;c__DisplayClass29_1</name>
                <newname>ImageView.Managers.ThumbnailManager/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PerformThumbnailScanMultithreaded&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Managers.ThumbnailManager/&lt;&gt;c__DisplayClass29_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;string&gt;</signature>
                        <name>filenameQueue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/&lt;&gt;c__DisplayClass35_0</name>
                <newname>ImageView.Managers.ThumbnailManager/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>&lt;ValidateThumbnailDatabase&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>duplicateKey</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/&lt;PerformThumbnailScanMultithreaded&gt;d__29</name>
                <newname>ImageView.Managers.ThumbnailManager/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.ThumbnailManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;int32&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;int32&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>dirList</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;</signature>
                        <name>progress</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalNumberOfFiles</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/&lt;StartThumbnailScan&gt;d__19</name>
                <newname>ImageView.Managers.ThumbnailManager/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.ThumbnailManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;int32&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;</signature>
                        <name>progress</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>scanSubdirectories</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Managers.ThumbnailManager/ThumbnailData</name>
                <newname>ImageView.Managers.ThumbnailManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_Image</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ThumbnailEntry()</signature>
                        <name>get_ThumbnailEntry</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_Image</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.ThumbnailEntry)</signature>
                        <name>set_ThumbnailEntry</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>&lt;Image&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ThumbnailEntry</signature>
                        <name>&lt;ThumbnailEntry&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.ApplicationVersion</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.Models.ApplicationVersion)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.Models.ApplicationVersion)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ApplicationVersion(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ApplicationVersion(string, string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Build</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadUrl</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Major</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Minor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Revistion</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Build</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadUrl</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Major</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Minor</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Revistion</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Build&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DownloadUrl&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Major&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Minor&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Revistion&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Build</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadUrl</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Major</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Minor</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Revistion</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.CachedImage</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LoadImage</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreatedDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Filename</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ImageCreateDate</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_ImageObject</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreatedDate</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ImageCreateDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_ImageObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifiedDate</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Size</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreatedDate&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Filename&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ImageCreateDate&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>&lt;ImageObject&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ModifiedDate&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreatedDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Filename</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ImageCreateDate</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Image()</signature>
                        <name>ImageObject</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ModifiedDate</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Size</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.Enums.GeneralEnums</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.Enums.NotificationType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.Enums.NotificationType</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>ImageView.Models.Enums.NotificationType</signature>
                        <name>Information</name>
                    </field>
                    <field>
                        <signature>ImageView.Models.Enums.NotificationType</signature>
                        <name>OkCancelQuery</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.Enums.TreeViewFolderStateChange</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.Enums.TreeViewFolderStateChange</signature>
                        <name>FolderAdded</name>
                    </field>
                    <field>
                        <signature>ImageView.Models.Enums.TreeViewFolderStateChange</signature>
                        <name>FolderRemoved</name>
                    </field>
                    <field>
                        <signature>ImageView.Models.Enums.TreeViewFolderStateChange</signature>
                        <name>FolderRenamed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.FileEntry</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Length</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Position</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Length&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Position</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.ImageInformationModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreateDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileDirectory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageDimenstions</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModifiedDate</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SizeFormated</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreateDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImageDimenstions</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastModifiedDate</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Size</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreateDate&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileDirectory&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImageDimenstions&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModifiedDate&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreateDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileDirectory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageDimenstions</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastModifiedDate</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Size</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SizeFormated</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.ImageReferenceCollection</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;int32&gt;, ImageView.Services.ImageLoaderService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceElement()</signature>
                        <name>GetNextImage</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceElement()</signature>
                        <name>GetPreviousImage</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceElement()</signature>
                        <name>PeekNextImage</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceElement(string)</signature>
                        <name>SetCurrentImage</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceElement()</signature>
                        <name>get_CurrentImage</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ImageCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ImageListPointer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.ImageReferenceElement)</signature>
                        <name>set_CurrentImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ImageListPointer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.ImageReferenceElement</signature>
                        <name>&lt;CurrentImage&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_imageListPointer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>_imageLoaderService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>_randomImagePosList</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ImageView.Models.ImageReferenceElement()</signature>
                        <name>CurrentImage</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ImageCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ImageListPointer</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.ImageReferenceElement</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ImageView.Models.ImageReferenceElement)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.Models.ImageReferenceElement)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SizeInKb</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.Models.ImageReferenceElement, ImageView.Models.ImageReferenceElement)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.Models.ImageReferenceElement, ImageView.Models.ImageReferenceElement)</signature>
                        <name>op_Inequality</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>SizeInKb</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.Interface.IRepository</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LockDatabase</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(int32, int32)</signature>
                        <name>ReadImage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveToDisk</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnlockDatabase</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.FileEntry(System.Drawing.Image)</signature>
                        <name>WriteImage</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLocked</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLocked</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>ImageView.Models.SortableBindingList`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)</signature>
                        <name>ApplySortCore</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyDescriptor, string, string)</signature>
                        <name>CreateOrderByMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.ListChangedEventArgs)</signature>
                        <name>OnListChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveSortCore</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;!0&gt;)</signature>
                        <name>ResetItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.ComponentModel.ListSortDirection()</signature>
                        <name>get_SortDirectionCore</name>
                    </method>
                    <method>
                        <signature>System.ComponentModel.PropertyDescriptor()</signature>
                        <name>get_SortPropertyCore</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportsSortingCore</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Func`2&lt;System.Collections.Generic.List`1&lt;!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!0&gt;&gt;&gt;</signature>
                        <name>cachedOrderByExpressions</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;!0&gt;</signature>
                        <name>originalList</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;ImageView.Models.SortableBindingList`1&lt;!0&gt;,System.Collections.Generic.List`1&lt;!0&gt;&gt;</signature>
                        <name>populateBaseList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.ListSortDirection</signature>
                        <name>sortDirection</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyDescriptor</signature>
                        <name>sortProperty</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.ComponentModel.ListSortDirection()</signature>
                        <name>SortDirectionCore</name>
                    </property>
                    <property>
                        <signature>System.ComponentModel.PropertyDescriptor()</signature>
                        <name>SortPropertyCore</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SupportsSortingCore</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>ImageView.Models.SortableBindingList`1/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.SortableBindingList`1&lt;!0&gt;, System.Collections.Generic.List`1&lt;!0&gt;)</signature>
                        <name>&lt;.ctor&gt;b__5_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.SortableBindingList`1&lt;!0&gt;, System.Collections.Generic.List`1&lt;!0&gt;)</signature>
                        <name>&lt;.ctor&gt;b__6_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.SortableBindingList`1&lt;!0&gt;, System.Collections.Generic.List`1&lt;!0&gt;)</signature>
                        <name>&lt;.ctor&gt;b__7_0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.SortableBindingList`1/&lt;&gt;c&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;ImageView.Models.SortableBindingList`1&lt;!0&gt;,System.Collections.Generic.List`1&lt;!0&gt;&gt;</signature>
                        <name>&lt;&gt;9__5_0</name>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;ImageView.Models.SortableBindingList`1&lt;!0&gt;,System.Collections.Generic.List`1&lt;!0&gt;&gt;</signature>
                        <name>&lt;&gt;9__6_0</name>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;ImageView.Models.SortableBindingList`1&lt;!0&gt;,System.Collections.Generic.List`1&lt;!0&gt;&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>ImageView.Models.SortableBindingList`1/&lt;&gt;c__DisplayClass15_0</name>
                <newname>ImageView.Models.SortableBindingList`1/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.MethodInfo)</signature>
                        <name>&lt;CreateOrderByMethod&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>orderByMethodName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.ThumbnailScanProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsComplete</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PercentComplete</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ScannedFiles</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalAmountOfFiles</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsComplete</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ScannedFiles</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalAmountOfFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsComplete&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ScannedFiles&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;TotalAmountOfFiles&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsComplete</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PercentComplete</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ScannedFiles</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalAmountOfFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.UserInteraction.UserInformationEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Models.UserInteraction.UserInteractionInformation)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.UserInteraction.UserInteractionInformation()</signature>
                        <name>get_UserInformation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.UserInteraction.UserInteractionInformation</signature>
                        <name>&lt;UserInformation&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ImageView.Models.UserInteraction.UserInteractionInformation()</signature>
                        <name>UserInformation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.UserInteraction.UserInteractionBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.MessageBoxButtons()</signature>
                        <name>get_Buttons</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.MessageBoxIcon()</signature>
                        <name>get_Icon</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Label</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MessageBoxButtons)</signature>
                        <name>set_Buttons</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MessageBoxIcon)</signature>
                        <name>set_Icon</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Label</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Message</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.MessageBoxButtons</signature>
                        <name>&lt;Buttons&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MessageBoxIcon</signature>
                        <name>&lt;Icon&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Label&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.MessageBoxButtons()</signature>
                        <name>Buttons</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.MessageBoxIcon()</signature>
                        <name>Icon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Label</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Message</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Models.UserInteraction.UserInteractionInformation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnQueryCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnQueryCompleted</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnQueryCompleted</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnQueryCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Models.UserInteraction.UserInteractionQuestion</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnQueryCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnQueryCompleted</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action</signature>
                        <name>CancelResponse</name>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>OkResponse</name>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnQueryCompleted</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnQueryCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Models.UserInteraction.UserQuestionEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Models.UserInteraction.UserInteractionQuestion)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.Models.UserInteraction.UserInteractionQuestion()</signature>
                        <name>get_UserQuestion</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.UserInteraction.UserInteractionQuestion</signature>
                        <name>&lt;UserQuestion&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ImageView.Models.UserInteraction.UserInteractionQuestion()</signature>
                        <name>UserQuestion</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Program</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeAutofac</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>SetProcessDPIAware</name>
                    </method>
                    <method>
                        <signature>Autofac.IContainer()</signature>
                        <name>get_Container</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Autofac.IContainer)</signature>
                        <name>set_Container</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Autofac.IContainer</signature>
                        <name>&lt;Container&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Are_you_sure_that_you_want_to_delete_the_selected_files_</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Are_you_sure_you_want_to_close_all_windows_</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Are_you_sure_you_want_to_delete_this_bookmark_</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Are_you_sure_you_want_to_delete_this_folder_</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Back_icon</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Arrow_Next_icon</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Close_all_windows_</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Confirm_delete</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Delete</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error_loading_new_image</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Faild_to_load_settings</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Failed_to_set_transition_image_over_current_image_</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Fatal_error_encountered_when_accessing_the_registry_settings_please_restart_</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileBrowser_OpenImporterForm_No_valid_path_selected</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FormSettings_UpdateCacheSizeLabel__MB</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImageFormatFilter</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Invalid_password_</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Please_unlock_bookmarks_first</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Remove_folder_</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Unable_To_Access_application_settings_in_registry</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_WindowsIcon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_application_exit</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_failed_to_decode_file_</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_transparent</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Are_you_sure_that_you_want_to_delete_the_selected_files_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Are_you_sure_you_want_to_close_all_windows_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Are_you_sure_you_want_to_delete_this_bookmark_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Are_you_sure_you_want_to_delete_this_folder_</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>Arrow_Back_icon</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>Arrow_Next_icon</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Close_all_windows_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Confirm_delete</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Delete</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Error_loading_new_image</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Faild_to_load_settings</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Failed_to_set_transition_image_over_current_image_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Fatal_error_encountered_when_accessing_the_registry_settings_please_restart_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileBrowser_OpenImporterForm_No_valid_path_selected</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FormSettings_UpdateCacheSizeLabel__MB</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImageFormatFilter</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Invalid_password_</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Please_unlock_bookmarks_first</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Remove_folder_</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Unable_To_Access_application_settings_in_registry</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>WindowsIcon</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>application_exit</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>failed_to_decode_file_</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>transparent</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ImageView.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UpdateDownloadUrl</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UpdateHistoryUrl</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ImageView.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UpdateDownloadUrl</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UpdateHistoryUrl</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ApplicationSettingsService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LoadSettings</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveSettings</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnRegistryAccessDenied</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnSettingsLoaded</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnSettingsSaved</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Library.EventHandlers.ExceptionEventHandler)</signature>
                        <name>add_OnUnexpectedException</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompanyName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings()</signature>
                        <name>get_Settings</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnRegistryAccessDenied</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnSettingsLoaded</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnSettingsSaved</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Library.EventHandlers.ExceptionEventHandler)</signature>
                        <name>remove_OnUnexpectedException</name>
                    </method>
                    <method>
                        <signature>void(ImageView.DataContracts.ImageViewApplicationSettings)</signature>
                        <name>set_Settings</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings</signature>
                        <name>&lt;Settings&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnRegistryAccessDenied</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnSettingsLoaded</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnSettingsSaved</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.Library.EventHandlers.ExceptionEventHandler</signature>
                        <name>OnUnexpectedException</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Registry.IRegistryAccess</signature>
                        <name>_registryService</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CompanyName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings()</signature>
                        <name>Settings</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnRegistryAccessDenied</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnSettingsLoaded</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnSettingsSaved</name>
                    </event>
                    <event>
                        <signature>ImageView.Library.EventHandlers.ExceptionEventHandler</signature>
                        <name>OnUnexpectedException</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Services.BookmarkService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Managers.BookmarkManager, ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;SaveBookmarksAsync&gt;b__15_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDefaultPassword</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>OpenBookmarks</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>OpenBookmarks</name>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>SaveBookmarks</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>SaveBookmarksAsync</name>
                    </method>
                    <method>
                        <signature>ImageView.Managers.BookmarkManager()</signature>
                        <name>get_BookmarkManager</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BookmarkFileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>LockObj</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager</signature>
                        <name>_bookmarkManager</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_directory</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Memory.PasswordStorage</signature>
                        <name>_passwordStorage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_protectedMemoryStorageKey</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ImageView.Managers.BookmarkManager()</signature>
                        <name>BookmarkManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.BookmarkService/&lt;SaveBookmarksAsync&gt;d__15</name>
                <newname>ImageView.Services.BookmarkService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageCacheService</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetCacheUsage</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(string)</signature>
                        <name>GetImage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TruncateCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>_applicationSettingsService_OnSettingsChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_CacheSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CachedItems</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_CacheSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>DefaultCacheSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MaxCacheSize</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MinCacheSize</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_cacheSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,ImageView.Models.CachedImage&gt;</signature>
                        <name>_cachedImages</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>CacheSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CachedItems</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageCacheService/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64(System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;)</signature>
                        <name>&lt;GetCacheUsage&gt;b__14_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int64(System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;)</signature>
                        <name>&lt;TruncateCache&gt;b__13_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;)</signature>
                        <name>&lt;TruncateCache&gt;b__13_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;)</signature>
                        <name>&lt;TruncateCache&gt;b__13_2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ImageCacheService/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;,int64&gt;</signature>
                        <name>&lt;&gt;9__13_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__13_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__13_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;string,ImageView.Models.CachedImage&gt;,int64&gt;</signature>
                        <name>&lt;&gt;9__14_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.BookmarkService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.FileInfo)</signature>
                        <name>&lt;GetNumberOfFilesMatchingRegexp&gt;b__35_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.IO.DirectoryInfo)</signature>
                        <name>&lt;GetNumberOfFilesMatchingRegexp&gt;b__35_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RunImageImport&gt;b__39_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.ImageReferenceElement)</signature>
                        <name>CreateFromOpenSingleImage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoImageImport</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;()</signature>
                        <name>DoImageImportFromBookmarkedImages</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceCollection(bool)</signature>
                        <name>GenerateImageReferenceCollection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ImageReferenceElement&gt;(bool)</signature>
                        <name>GenerateThumbnailList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ImageReferenceElement&gt;(string)</signature>
                        <name>GetAllImagesRecursive</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GetNumberOfFilesMatchingRegexp</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;()</signature>
                        <name>GetRandomImagePositionList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(ImageView.Models.ImageReferenceElement)</signature>
                        <name>PermanentlyRemoveFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;()</signature>
                        <name>RunBookmarkImageImport</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(string)</signature>
                        <name>RunImageImport</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopImport</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DirectoryInfo)</signature>
                        <name>UserHasReadAccessToDirectory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnImageWasDeleted</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler)</signature>
                        <name>add_OnImportComplete</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler)</signature>
                        <name>add_OnProgressUpdate</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ImageReferenceElement&gt;()</signature>
                        <name>get_ImageReferenceList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunningImport</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProgressInterval</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnImageWasDeleted</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler)</signature>
                        <name>remove_OnImportComplete</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler)</signature>
                        <name>remove_OnProgressUpdate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRunningImport</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProgressInterval</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRunningImport&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ImageSearchPatterb</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnImageWasDeleted</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler</signature>
                        <name>OnImportComplete</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler</signature>
                        <name>OnProgressUpdate</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>_bookmarkService</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>_fileNameRegExp</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_filesLoaded</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_imageBaseDir</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ImageReferenceElement&gt;</signature>
                        <name>_imageReferenceList</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_progressInterval</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.RandomNumberGenerator</signature>
                        <name>_randomNumberGenerator</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_runWorkerThread</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>_threadLock</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_tickCount</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_totalNumberOfFiles</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>_winId</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ImageReferenceElement&gt;()</signature>
                        <name>ImageReferenceList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunningImport</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ProgressInterval</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnImageWasDeleted</name>
                    </event>
                    <event>
                        <signature>ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler</signature>
                        <name>OnImportComplete</name>
                    </event>
                    <event>
                        <signature>ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler</signature>
                        <name>OnProgressUpdate</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;DoImageImportFromBookmarkedImages&gt;b__34_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ImageView.Models.ImageReferenceElement(ImageView.DataContracts.Bookmark)</signature>
                        <name>&lt;DoImageImportFromBookmarkedImages&gt;b__34_2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__34_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ImageView.DataContracts.Bookmark,ImageView.Models.ImageReferenceElement&gt;</signature>
                        <name>&lt;&gt;9__34_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;&gt;c__DisplayClass34_0</name>
                <newname>ImageView.Services.ImageLoaderService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DoImageImportFromBookmarkedImages&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ImageReferenceElement&gt;</signature>
                        <name>imgReferenceList</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;&gt;c__DisplayClass36_0</name>
                <newname>ImageView.Services.ImageLoaderService/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Security.Claims.Claim)</signature>
                        <name>&lt;UserHasReadAccessToDirectory&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.AccessControl.FileSystemAccessRule</signature>
                        <name>fsAccessRules</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;&gt;c__DisplayClass41_0</name>
                <newname>ImageView.Services.ImageLoaderService/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ImageView.Models.ImageReferenceElement)</signature>
                        <name>&lt;PermanentlyRemoveFile&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Models.ImageReferenceElement</signature>
                        <name>imgRefElement</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;DoImageImportFromBookmarkedImages&gt;d__34</name>
                <newname>ImageView.Services.ImageLoaderService/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService/&lt;&gt;c__DisplayClass34_0</signature>
                        <name>&lt;&gt;8__1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;RunBookmarkImageImport&gt;d__38</name>
                <newname>ImageView.Services.ImageLoaderService/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/&lt;RunImageImport&gt;d__39</name>
                <newname>ImageView.Services.ImageLoaderService/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ImageLoaderService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ImageLoaderService/ProgressUpdateEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ImageView.Services.ProgressEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ImageView.Services.ProgressEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ProgressEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ProgressStatusEnum, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_CompletionRate</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ImagesLoaded</name>
                    </method>
                    <method>
                        <signature>ImageView.Services.ProgressStatusEnum()</signature>
                        <name>get_ProgressStatus</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_CompletionRate</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ImagesLoaded</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Services.ProgressStatusEnum)</signature>
                        <name>set_ProgressStatus</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>&lt;CompletionRate&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ImagesLoaded&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ProgressStatusEnum</signature>
                        <name>&lt;ProgressStatus&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>CompletionRate</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ImagesLoaded</name>
                    </property>
                    <property>
                        <signature>ImageView.Services.ProgressStatusEnum()</signature>
                        <name>ProgressStatus</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ProgressStatusEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ProgressStatusEnum</signature>
                        <name>Canceled</name>
                    </field>
                    <field>
                        <signature>ImageView.Services.ProgressStatusEnum</signature>
                        <name>Complete</name>
                    </field>
                    <field>
                        <signature>ImageView.Services.ProgressStatusEnum</signature>
                        <name>Running</name>
                    </field>
                    <field>
                        <signature>ImageView.Services.ProgressStatusEnum</signature>
                        <name>Started</name>
                    </field>
                    <field>
                        <signature>ImageView.Services.ProgressStatusEnum</signature>
                        <name>Stopping</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ServiceBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.StartupService</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService, ImageView.Services.UpdateService, ImageView.Services.UserInteractionService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;ScheduleAndRunStartupJobs&gt;b__4_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;UpdateProgramJob&gt;b__8_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnqueueUpdateRequest</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NoUpdate</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>RunStartupJobsAsync</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ScheduleAndRunStartupJobs</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;()</signature>
                        <name>TestJob</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateProgramJob</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>UpdateProgramJobAsync</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UserInteractionService</signature>
                        <name>_interactionService</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UpdateService</signature>
                        <name>_updateService</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.StartupService/&lt;&lt;ScheduleAndRunStartupJobs&gt;b__4_0&gt;d</name>
                <newname>ImageView.Services.StartupService/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.StartupService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.StartupService/&lt;&lt;UpdateProgramJob&gt;b__8_0&gt;d</name>
                <newname>ImageView.Services.StartupService/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.StartupService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.StartupService/&lt;RunStartupJobsAsync&gt;d__5</name>
                <newname>ImageView.Services.StartupService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.StartupService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataContracts.ImageViewApplicationSettings</signature>
                        <name>&lt;settings&gt;5__1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Threading.Tasks.Task&gt;</signature>
                        <name>&lt;taskList&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.StartupService/&lt;TestJob&gt;d__10</name>
                <newname>ImageView.Services.StartupService/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.StartupService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.StartupService/&lt;UpdateProgramJobAsync&gt;d__9</name>
                <newname>ImageView.Services.StartupService/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.StartupService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ThumbnailService</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Managers.ThumbnailManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;OptimizeDatabaseAsync&gt;b__21_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ClearDatabase</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfCachedThumbnails</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(string)</signature>
                        <name>GetThumbnail</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetThumbnailDbSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LoadThumbnailDatabase</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OptimizeDatabase</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OptimizeDatabaseAsync</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>RemoveAllNonAccessableFilesAndSaveDb</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>SaveThumbnailDatabase</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>ScanDirectory</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task(string, System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;, bool)</signature>
                        <name>ScanDirectoryAsync</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopThumbnailScan</name>
                    </method>
                    <method>
                        <signature>bool(int64)</signature>
                        <name>TruncateCacheSize</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CompletedThumbnailScan</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_StartedThumbnailScan</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BasePath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunningScan</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CompletedThumbnailScan</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_StartedThumbnailScan</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BasePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRunningScan</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BasePath&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CompletedThumbnailScan</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>StartedThumbnailScan</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isRunningScan</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.ThumbnailManager</signature>
                        <name>_thumbnailManager</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BasePath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunningScan</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CompletedThumbnailScan</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>StartedThumbnailScan</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Services.ThumbnailService/&lt;&gt;c__DisplayClass18_0</name>
                <newname>ImageView.Services.ThumbnailService/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ScanDirectoryAsync&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;</signature>
                        <name>progress</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>scanSubdirectories</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ThumbnailService/&lt;OptimizeDatabaseAsync&gt;d__21</name>
                <newname>ImageView.Services.ThumbnailService/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ThumbnailService/&lt;ScanDirectory&gt;d__17</name>
                <newname>ImageView.Services.ThumbnailService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>scanSubdirectories</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.ThumbnailService/&lt;ScanDirectoryAsync&gt;d__18</name>
                <newname>ImageView.Services.ThumbnailService/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;ImageView.Models.ThumbnailScanProgress&gt;</signature>
                        <name>progress</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>scanSubdirectories</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.UpdateService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>DownloadAndRunLatestVersionInstaller</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;string&gt;()</signature>
                        <name>DownloadLatestVersion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;ImageView.Models.ApplicationVersion&gt;()</signature>
                        <name>GetLatestVersion</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;()</signature>
                        <name>IsLatestVersion</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;ImageView.Models.ApplicationVersion&gt;(System.IO.StreamReader)</signature>
                        <name>ParseFromUpdateTextFile</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>_downloadUrlRegex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>_versionRegex</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.UpdateService/&lt;DownloadAndRunLatestVersionInstaller&gt;d__3</name>
                <newname>ImageView.Services.UpdateService/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UpdateService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;string&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.UpdateService/&lt;DownloadLatestVersion&gt;d__5</name>
                <newname>ImageView.Services.UpdateService/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UpdateService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;string&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;ImageView.Models.ApplicationVersion&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.UpdateService/&lt;GetLatestVersion&gt;d__4</name>
                <newname>ImageView.Services.UpdateService/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UpdateService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;ImageView.Models.ApplicationVersion&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Net.WebResponse&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.UpdateService/&lt;IsLatestVersion&gt;d__2</name>
                <newname>ImageView.Services.UpdateService/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.UpdateService</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;ImageView.Models.ApplicationVersion&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Services.UserInteractionService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Queue`1/Enumerator&lt;ImageView.Models.UserInteraction.UserInteractionInformation&gt;()</signature>
                        <name>GetInteractionInformation</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Queue`1/Enumerator&lt;ImageView.Models.UserInteraction.UserInteractionQuestion&gt;()</signature>
                        <name>GetInteractionQuestions</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.UserInteraction.UserInteractionInformation)</signature>
                        <name>InformUser</name>
                    </method>
                    <method>
                        <signature>void(ImageView.FormMain)</signature>
                        <name>Initialize</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.UserInteraction.UserInteractionQuestion)</signature>
                        <name>RequestUserAccept</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>_formMain_Shown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserInformationEventArgs&gt;)</signature>
                        <name>add_UserInformationRecieved</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserQuestionEventArgs&gt;)</signature>
                        <name>add_UserQuestionRecieved</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AnyUserInformationEnqued</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AnyUserQuestionsEnqued</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInitialized</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserInformationEventArgs&gt;)</signature>
                        <name>remove_UserInformationRecieved</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserQuestionEventArgs&gt;)</signature>
                        <name>remove_UserQuestionRecieved</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInitialized</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsInitialized&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserInformationEventArgs&gt;</signature>
                        <name>UserInformationRecieved</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserQuestionEventArgs&gt;</signature>
                        <name>UserQuestionRecieved</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ImageView.FormMain</signature>
                        <name>_formMain</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;ImageView.Models.UserInteraction.UserInteractionInformation&gt;</signature>
                        <name>_informationQueue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;ImageView.Models.UserInteraction.UserInteractionQuestion&gt;</signature>
                        <name>_questionQueue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AnyUserInformationEnqued</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>AnyUserQuestionsEnqued</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInitialized</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserInformationEventArgs&gt;</signature>
                        <name>UserInformationRecieved</name>
                    </event>
                    <event>
                        <signature>System.EventHandler`1&lt;ImageView.Models.UserInteraction.UserQuestionEventArgs&gt;</signature>
                        <name>UserQuestionRecieved</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>ImageView.Storage.AccessHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DirectoryInfo)</signature>
                        <name>UserHasReadAccessToDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>_winId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Storage.AccessHelper/&lt;&gt;c__DisplayClass2_0</name>
                <newname>ImageView.Storage.AccessHelper/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Security.Claims.Claim)</signature>
                        <name>&lt;UserHasReadAccessToDirectory&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.AccessControl.FileSystemAccessRule</signature>
                        <name>fsAccessRules</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Storage.LocalStorageRegistryAccess</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(object)</signature>
                        <name>CreateTemplateObjFromLocalObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>DeleteSubKeyTree</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadLocalDatabase</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>ReadObjectFromRegistry</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveLocalDatabase</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SaveObjectToRegistry</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetupSubKeyPathAndAccessRights</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SubKeyCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ValueCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompanyName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubKey</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowError</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompanyName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowError&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubKey&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LocalStoragePassword</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localStorageFilePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;</signature>
                        <name>_storageDictionary</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CompanyName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SubKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.BookmarkPreviewOverlayUserControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>BookmarkPreviewOverlayUserControl_Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>GetImageSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadImage</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxWidth</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MaxHeight&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MaxWidth&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>BookmarkPreviewContentPanel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>OverlayPictureBox</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxWidth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ColorSelectComboBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DrawItemEventArgs)</signature>
                        <name>ColorSelectComboBox_DrawItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Initialize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MeasureItemEventArgs)</signature>
                        <name>OnMeasureItem</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ConfirmExitUserControl</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ConfirmExitUserControl_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>chkDisableExitDialog_CheckedChanged</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>MainPanel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkDisableExitDialog</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblInformation</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.CreateBookmarkFolder</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.BookmarkService, ImageView.Managers.BookmarkManager, ImageView.Models.ImageReferenceElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AddBooknmarkFolder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.Enums.TreeViewFolderStateChange, ImageView.DataContracts.BookmarkFolder)</signature>
                        <name>AlterTreeViewState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>BookmarksTree_AfterSelect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>CreateBookmarkFolder_Load</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitBookmarksDataSource</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitTreeView</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReLoadBookmarks</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidateBookmarkName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>addFolderToolStripMenuItem_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnNewFolder_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSave_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>deleteFolderToolStripMenuItem_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultBookmarkName</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>renameFolderMenuItem_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DefaultBookmarkName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DefaultBookmarkName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ImageList</signature>
                        <name>FolderImages</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>ImageView.Managers.BookmarkManager</signature>
                        <name>_bookmarkManager</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.BookmarkService</signature>
                        <name>_bookmarkService</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ImageView.Models.ImageReferenceElement</signature>
                        <name>_imageReference</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>ImageView.DataBinding.TreeViewDataContext</signature>
                        <name>_treeViewDataContext</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>addFolderToolStripMenuItem</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>bookmarkFolderBindingSource</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TreeView</signature>
                        <name>bookmarksTree</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnNewFolder</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSave</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuStripFolders</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>deleteFolderToolStripMenuItem</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>mainPanel</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>renameFolderMenuItem</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator2</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtBookmarkName</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultBookmarkName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.CustomPanel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnableDoubleBuffering</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaintBackground</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.BorderStyle()</signature>
                        <name>get_BorderStyle</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BorderWidthInner</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BorderWidthOuter</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_DefaultSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_InnerBorderColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_OuterBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.BorderStyle)</signature>
                        <name>set_BorderStyle</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BorderWidthInner</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BorderWidthOuter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_InnerBorderColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_OuterBorderColor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.BorderStyle</signature>
                        <name>&lt;BorderStyle&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;BorderWidthInner&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;BorderWidthOuter&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>&lt;InnerBorderColor&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>&lt;OuterBorderColor&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>_defaultSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Pen</signature>
                        <name>_pen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.BorderStyle()</signature>
                        <name>BorderStyle</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>BorderWidthInner</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>BorderWidthOuter</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>DefaultSize</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>InnerBorderColor</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>OuterBorderColor</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.GetPassword</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ValidatePassword</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedPassword</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedPassword</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtPassword_KeyUp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SelectedPassword&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>SelectedPassword</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ListItemDivider</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DrawItemEventArgs)</signature>
                        <name>DrawItem</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_DividerColor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DividerMargin</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Pen()</signature>
                        <name>get_DividerPen</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ImageView.UserControls.ListItemDivider/DividerPositions()</signature>
                        <name>get_DividerPosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_DividerColor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DividerMargin</name>
                    </method>
                    <method>
                        <signature>void(ImageView.UserControls.ListItemDivider/DividerPositions)</signature>
                        <name>set_DividerPosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Height</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>&lt;DividerColor&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DividerMargin&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.ListItemDivider/DividerPositions</signature>
                        <name>&lt;DividerPosition&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Height&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Pen</signature>
                        <name>_pen</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>DividerColor</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DividerMargin</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Pen()</signature>
                        <name>DividerPen</name>
                    </property>
                    <property>
                        <signature>ImageView.UserControls.ListItemDivider/DividerPositions()</signature>
                        <name>DividerPosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Height</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ListItemDivider/DividerPositions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.UserControls.ListItemDivider/DividerPositions</signature>
                        <name>Bottom</name>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.ListItemDivider/DividerPositions</signature>
                        <name>Top</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.RenameBookmark</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNewBookmarkName</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>InitControl</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>RenameBookmark_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidateName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtName_KeyUp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_bookmarkName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_filename</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpBox1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblBookmarkName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblFilename</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtName</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.RenameBookmarkFolder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNewFolderName</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>InitControl</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>RenameBookmarkFolder_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidateName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtName_KeyUp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_bookmarks</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_folderName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpBox1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblBookmarkName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblBookmarks</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtName</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.SelectPassword</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>SelectPassword_Load</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetPassword</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>VerifyPasswords</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedPassword</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedPassword</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtPasswordConfirm_KeyUp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SelectedPassword&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MinLength</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblPassword</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblStatus</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPasswordConfirm</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>SelectedPassword</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ThumbnailScanDirectory</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ThumbnailService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelScan</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(ImageView.Models.ThumbnailScanProgress)</signature>
                        <name>Handler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnFormClosed</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ThumbnailScanDirectory_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateButtonState</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>_thumbnailService_CompletedThumbnailScan</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnBrowse_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnScan_Click</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_directorySelected</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_scaningDirectory</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ImageView.Services.ThumbnailService</signature>
                        <name>_thumbnailService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnBrowse</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnScan</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chbIncludeSubdirs</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FolderBrowserDialog</signature>
                        <name>folderBrowserDialog1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblDirectory</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ProgressBar</signature>
                        <name>progressBar</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtFolderPath</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ThumbnailScanDirectory/&lt;btnScan_Click&gt;d__7</name>
                <newname>ImageView.UserControls.ThumbnailScanDirectory/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ImageView.UserControls.ThumbnailScanDirectory</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.UserControls.ThumbnailSettings</name>
                <methodlist>
                    <method>
                        <signature>void(ImageView.Services.ApplicationSettingsService)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetSelectedThumbnailSize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ThumbnailSettings_Load</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBarThumbnailCount_ValueChanged</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ImageView.Services.ApplicationSettingsService</signature>
                        <name>_applicationSettingsService</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblThumbnailCount</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rb128</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rb256</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rb512</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RadioButton</signature>
                        <name>rb64</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBarThumbnailCount</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.BitwiseBlendType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ImageView.Utility.BitwiseBlendType</signature>
                        <name>And</name>
                    </field>
                    <field>
                        <signature>ImageView.Utility.BitwiseBlendType</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>ImageView.Utility.BitwiseBlendType</signature>
                        <name>Or</name>
                    </field>
                    <field>
                        <signature>ImageView.Utility.BitwiseBlendType</signature>
                        <name>Xor</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.DelayOperation</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void(object)</signature>
                        <name>CallBack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Action, int32)</signature>
                        <name>DelayAction</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.DelayOperation/DelayedAction</name>
                <newname>f/a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Action, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action</signature>
                        <name>_action</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_delayTime</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.FormFactory</name>
                <methodlist>
                    <method>
                        <signature>System.Windows.Forms.Form(System.Windows.Forms.UserControl, System.Drawing.Size)</signature>
                        <name>CreateFloatingForm</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Form(System.Windows.Forms.UserControl)</signature>
                        <name>CreateModalForm</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Form(System.Windows.Forms.UserControl)</signature>
                        <name>CreateModalSimpleDialog</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Form(System.Windows.Forms.UserControl)</signature>
                        <name>CreateSettingsForm</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.ImageTransform</name>
                <methodlist>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap, System.Drawing.Bitmap, ImageView.Utility.BitwiseBlendType, ImageView.Utility.BitwiseBlendType, ImageView.Utility.BitwiseBlendType)</signature>
                        <name>BitwiseBlend</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(System.Drawing.Image, System.Drawing.Image, float32)</signature>
                        <name>BlendImages</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Bitmap, unsigned int8)</signature>
                        <name>MatrixBlend</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(System.Drawing.Image, System.Drawing.Image, System.Drawing.Size, float32, bool)</signature>
                        <name>OffsetImagesHorizontal</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(System.Drawing.Image, System.Drawing.Image, System.Drawing.Size, float32, bool)</signature>
                        <name>OffsetImagesVertical</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Image, int32, int32)</signature>
                        <name>ResizeImage</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image(System.Drawing.Image, float32)</signature>
                        <name>SetImageOpacity</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.NativeMethods</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReleaseCapture</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, native int, native int)</signature>
                        <name>SendMessage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>HT_CAPTION</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_NCLBUTTONDOWN</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.RestoreFormState</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Windows.Forms.Form, System.Drawing.Size, System.Drawing.Point, System.Drawing.Rectangle)</signature>
                        <name>SetFormSizeAndPosition</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.SystemIOHelper</name>
                <methodlist>
                    <method>
                        <signature>string(int64, int32)</signature>
                        <name>FormatFileSizeToString</name>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>GetFileSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ImageView.Utility.UIHelper</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Color&gt;()</signature>
                        <name>GetSelectableBackgroundColors</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Color&gt;()</signature>
                        <name>GetSelectableSystemBackgroundColors</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>MoreLinq.MoreEnumerable</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <arity>2</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, System.Func`2&lt;!!0,!!1&gt;)</signature>
                        <name>DistinctBy</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, System.Func`2&lt;!!0,!!1&gt;, System.Collections.Generic.IEqualityComparer`1&lt;!!1&gt;)</signature>
                        <name>DistinctBy</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, System.Func`2&lt;!!0,!!1&gt;, System.Collections.Generic.IEqualityComparer`1&lt;!!1&gt;)</signature>
                        <name>DistinctByImpl</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>TSource</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TKey</name>
                    <newname>b</newname>
                </genericparameter>
                <name>MoreLinq.MoreEnumerable/&lt;DistinctByImpl&gt;d__2`2</name>
                <newname>c/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TSource&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TSource&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEqualityComparer`1&lt;!1&gt;</signature>
                        <name>&lt;&gt;3__comparer</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,!1&gt;</signature>
                        <name>&lt;&gt;3__keySelector</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;3__source</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;!1&gt;</signature>
                        <name>&lt;knownKeys&gt;5__1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEqualityComparer`1&lt;!1&gt;</signature>
                        <name>comparer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,!1&gt;</signature>
                        <name>keySelector</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!0&gt;</signature>
                        <name>source</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>430</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>2660</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>2170</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>393</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>22</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>177</statistic>
            <statistic>41,16 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>1088</statistic>
            <statistic>40,90 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>1789</statistic>
            <statistic>82,44 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>10</statistic>
            <statistic>2,54 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0,00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>408</statistic>
            <statistic>15,34 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>181</statistic>
            <statistic>6,80 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>121</statistic>
            <statistic>4,55 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>99</statistic>
            <statistic>3,72 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>51</statistic>
            <statistic>1,92 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>44</statistic>
            <statistic>1,65 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>39</statistic>
            <statistic>1,47 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>